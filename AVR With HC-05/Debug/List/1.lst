
AVRASM ver. 2.1.30  J:\LCD With HC-05\Debug\List\1.asm Wed Jul 06 13:52:48 2022

J:\LCD With HC-05\Debug\List\1.asm(1086): warning: Register r5 already defined by the .DEF directive
J:\LCD With HC-05\Debug\List\1.asm(1087): warning: Register r4 already defined by the .DEF directive
J:\LCD With HC-05\Debug\List\1.asm(1088): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega8A
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8A
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c0de      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 cff6      	RJMP 0x00
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
                 
                 _tbl10_G101:
000013 2710
000014 03e8
000015 0064
000016 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000017 0001      	.DB  0x1,0x0
                 _tbl16_G101:
000018 1000
000019 0100
00001a 0010
00001b 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
00001c 2020
00001d 2020
00001e 6552
00001f 617a      	.DB  0x20,0x20,0x20,0x20,0x52,0x65,0x7A,0x61
000020 6b53
000021 7261
000022 2020
000023 2020      	.DB  0x53,0x6B,0x61,0x72,0x20,0x20,0x20,0x20
000024 5200
000025 532e
000026 4b2e
000027 5241      	.DB  0x0,0x52,0x2E,0x53,0x2E,0x4B,0x41,0x52
000028 4f20
000029 6570
00002a 006e
00002b 6f44      	.DB  0x20,0x4F,0x70,0x65,0x6E,0x0,0x44,0x6F
00002c 726f
00002d 4f20
00002e 6570
00002f 6e6e      	.DB  0x6F,0x72,0x20,0x4F,0x70,0x65,0x6E,0x6E
000030 6e69
000031 0067
000032 7554
000033 6e72      	.DB  0x69,0x6E,0x67,0x0,0x54,0x75,0x72,0x6E
000034 4f20
000035 206e
000036 6552
000037 2e64      	.DB  0x20,0x4F,0x6E,0x20,0x52,0x65,0x64,0x2E
000038 5200
000039 6465
00003a 4c20
00003b 6465      	.DB  0x0,0x52,0x65,0x64,0x20,0x4C,0x65,0x64
00003c 5420
00003d 7275
00003e 656e
00003f 2064      	.DB  0x20,0x54,0x75,0x72,0x6E,0x65,0x64,0x20
000040 6e4f
000041 5400
000042 7275
000043 206e      	.DB  0x4F,0x6E,0x0,0x54,0x75,0x72,0x6E,0x20
000044 6e4f
000045 4220
000046 756c
000047 0065      	.DB  0x4F,0x6E,0x20,0x42,0x6C,0x75,0x65,0x0
000048 6c42
000049 6575
00004a 4c20
00004b 6465      	.DB  0x42,0x6C,0x75,0x65,0x20,0x4C,0x65,0x64
00004c 5420
00004d 7275
00004e 656e
00004f 2064      	.DB  0x20,0x54,0x75,0x72,0x6E,0x65,0x64,0x20
000050 6e4f
000051 5400
000052 7275
000053 4f6e      	.DB  0x4F,0x6E,0x0,0x54,0x75,0x72,0x6E,0x4F
000054 206e
000055 7247
000056 6565
000057 006e      	.DB  0x6E,0x20,0x47,0x72,0x65,0x65,0x6E,0x0
000058 7247
000059 6565
00005a 206e
00005b 654c      	.DB  0x47,0x72,0x65,0x65,0x6E,0x20,0x4C,0x65
00005c 2064
00005d 7554
00005e 6e72
00005f 6465      	.DB  0x64,0x20,0x54,0x75,0x72,0x6E,0x65,0x64
000060 4f20
000061 006e
000062 7554
000063 6e72      	.DB  0x20,0x4F,0x6E,0x0,0x54,0x75,0x72,0x6E
000064 4f20
000065 206e
000066 7943
000067 6e61      	.DB  0x20,0x4F,0x6E,0x20,0x43,0x79,0x61,0x6E
000068 4300
000069 6179
00006a 206e
00006b 654c      	.DB  0x0,0x43,0x79,0x61,0x6E,0x20,0x4C,0x65
00006c 2064
00006d 7554
00006e 6e72
00006f 6465      	.DB  0x64,0x20,0x54,0x75,0x72,0x6E,0x65,0x64
000070 4f20
000071 006e
000072 7554
000073 6e72      	.DB  0x20,0x4F,0x6E,0x0,0x54,0x75,0x72,0x6E
000074 4f20
000075 6666
000076 4c20
000077 6465      	.DB  0x20,0x4F,0x66,0x66,0x20,0x4C,0x65,0x64
000078 4c00
000079 6465
00007a 2073
00007b 7554      	.DB  0x0,0x4C,0x65,0x64,0x73,0x20,0x54,0x75
00007c 6e72
00007d 6465
00007e 4f20
00007f 6666      	.DB  0x72,0x6E,0x65,0x64,0x20,0x4F,0x66,0x66
000080 2120
000081 5400
000082 7275
000083 4f6e      	.DB  0x20,0x21,0x0,0x54,0x75,0x72,0x6E,0x4F
000084 506e
000085 7275
000086 6c70
000087 0065      	.DB  0x6E,0x50,0x75,0x72,0x70,0x6C,0x65,0x0
000088 7550
000089 7072
00008a 656c
00008b 4c20      	.DB  0x50,0x75,0x72,0x70,0x6C,0x65,0x20,0x4C
00008c 6465
00008d 5420
00008e 7275
00008f 656e      	.DB  0x65,0x64,0x20,0x54,0x75,0x72,0x6E,0x65
000090 2064
000091 6e4f
000092 5400
000093 7275      	.DB  0x64,0x20,0x4F,0x6E,0x0,0x54,0x75,0x72
000094 4f6e
000095 206e
000096 6857
000097 7469      	.DB  0x6E,0x4F,0x6E,0x20,0x57,0x68,0x69,0x74
000098 0065
000099 6857
00009a 7469
00009b 2065      	.DB  0x65,0x0,0x57,0x68,0x69,0x74,0x65,0x20
00009c 654c
00009d 2064
00009e 7554
00009f 6e72      	.DB  0x4C,0x65,0x64,0x20,0x54,0x75,0x72,0x6E
0000a0 6465
0000a1 4f20
0000a2 006e
0000a3 7554      	.DB  0x65,0x64,0x20,0x4F,0x6E,0x0,0x54,0x75
0000a4 6e72
0000a5 6e4f
0000a6 6559
0000a7 6c6c      	.DB  0x72,0x6E,0x4F,0x6E,0x59,0x65,0x6C,0x6C
0000a8 776f
0000a9 5900
0000aa 6c65
0000ab 6f6c      	.DB  0x6F,0x77,0x0,0x59,0x65,0x6C,0x6C,0x6F
0000ac 2077
0000ad 654c
0000ae 2064
0000af 7554      	.DB  0x77,0x20,0x4C,0x65,0x64,0x20,0x54,0x75
0000b0 6e72
0000b1 6465
0000b2 4f20
0000b3 006e      	.DB  0x72,0x6E,0x65,0x64,0x20,0x4F,0x6E,0x0
0000b4 6e55
0000b5 6e6b
0000b6 776f
0000b7 206e      	.DB  0x55,0x6E,0x6B,0x6E,0x6F,0x77,0x6E,0x20
0000b8 6f43
0000b9 6d6d
0000ba 6e61
0000bb 0064      	.DB  0x43,0x6F,0x6D,0x6D,0x61,0x6E,0x64,0x0
                 _0x2000003:
0000bc c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
0000bd 0011      	.DW  0x11
0000be 0160      	.DW  _0x5
0000bf 0038      	.DW  _0x0*2
                 
0000c0 000d      	.DW  0x0D
0000c1 0171      	.DW  _0x5+17
0000c2 0049      	.DW  _0x0*2+17
                 
0000c3 000d      	.DW  0x0D
0000c4 017e      	.DW  _0x5+30
0000c5 0064      	.DW  _0x0*2+44
                 
0000c6 000d      	.DW  0x0D
0000c7 018b      	.DW  _0x5+43
0000c8 0083      	.DW  _0x0*2+75
                 
0000c9 000d      	.DW  0x0D
0000ca 0198      	.DW  _0x5+56
0000cb 00a3      	.DW  _0x0*2+107
                 
0000cc 000d      	.DW  0x0D
0000cd 01a5      	.DW  _0x5+69
0000ce 00c4      	.DW  _0x0*2+140
                 
0000cf 000d      	.DW  0x0D
0000d0 01b2      	.DW  _0x5+82
0000d1 00e4      	.DW  _0x0*2+172
                 
0000d2 000d      	.DW  0x0D
0000d3 01bf      	.DW  _0x5+95
0000d4 0103      	.DW  _0x0*2+203
                 
0000d5 000d      	.DW  0x0D
0000d6 01cc      	.DW  _0x5+108
0000d7 0125      	.DW  _0x0*2+237
                 
0000d8 000d      	.DW  0x0D
0000d9 01d9      	.DW  _0x5+121
0000da 0146      	.DW  _0x0*2+270
                 
0000db 0002      	.DW  0x02
0000dc 01e6      	.DW  __base_y_G100
0000dd 0178      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
0000de 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
0000df 94f8      	CLI
0000e0 27ee      	CLR  R30
0000e1 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0000e2 e0f1      	LDI  R31,1
0000e3 bffb      	OUT  GICR,R31
0000e4 bfeb      	OUT  GICR,R30
0000e5 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
0000e6 e08d      	LDI  R24,(14-2)+1
0000e7 e0a2      	LDI  R26,2
0000e8 27bb      	CLR  R27
                 __CLEAR_REG:
0000e9 93ed      	ST   X+,R30
0000ea 958a      	DEC  R24
0000eb f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000ec e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0000ed e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0000ee e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
0000ef 93ed      	ST   X+,R30
0000f0 9701      	SBIW R24,1
0000f1 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000f2 e7ea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000f3 e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000f4 9185      	LPM  R24,Z+
0000f5 9195      	LPM  R25,Z+
0000f6 9700      	SBIW R24,0
0000f7 f061      	BREQ __GLOBAL_INI_END
0000f8 91a5      	LPM  R26,Z+
0000f9 91b5      	LPM  R27,Z+
0000fa 9005      	LPM  R0,Z+
0000fb 9015      	LPM  R1,Z+
0000fc 01bf      	MOVW R22,R30
0000fd 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000fe 9005      	LPM  R0,Z+
0000ff 920d      	ST   X+,R0
000100 9701      	SBIW R24,1
000101 f7e1      	BRNE __GLOBAL_INI_LOOP
000102 01fb      	MOVW R30,R22
000103 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000104 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000105 bfed      	OUT  SPL,R30
000106 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000107 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000108 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000109 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00010a c000      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <mega8.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <string.h>
                 ;
                 ;#define RED     PORTC.1
                 ;#define GREEN   PORTC.3
                 ;#define BLUE    PORTC.4
                 ;#define Relay   PORTC.0
                 ;
                 ;void main(void)
                 ; 0000 000D {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 000E unsigned char x[13];
                 ; 0000 000F unsigned char y[20];
                 ; 0000 0010 // Port B initialization : Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 0011 DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
00010b 97a1      	SBIW R28,33
                 ;	x -> Y+20
                 ;	y -> Y+0
00010c efef      	LDI  R30,LOW(255)
00010d bbe7      	OUT  0x17,R30
                 ; 0000 0012 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
00010e e0e0      	LDI  R30,LOW(0)
00010f bbe8      	OUT  0x18,R30
                 ; 0000 0013 
                 ; 0000 0014 DDRC=(1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
000110 e3ef      	LDI  R30,LOW(63)
000111 bbe4      	OUT  0x14,R30
                 ; 0000 0015 PORTC=(0<<PORTC5) | (0<<PORTC4) |(0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
000112 e0e0      	LDI  R30,LOW(0)
000113 bbe5      	OUT  0x15,R30
                 ; 0000 0016 
                 ; 0000 0017 
                 ; 0000 0018 UCSRA=(0<<RXC) | (0<<TXC) | (0<<UDRE) | (0<<FE) | (0<<DOR) | (0<<UPE) | (0<<U2X) | (0<<MPCM);
000114 b9eb      	OUT  0xB,R30
                 ; 0000 0019 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (1<<RXEN) | (1<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
000115 e1e8      	LDI  R30,LOW(24)
000116 b9ea      	OUT  0xA,R30
                 ; 0000 001A UCSRC=(1<<URSEL) | (0<<UMSEL) | (0<<UPM1) | (0<<UPM0) | (0<<USBS) | (1<<UCSZ1) | (1<<UCSZ0) | (0<<UCPOL);
000117 e8e6      	LDI  R30,LOW(134)
000118 bde0      	OUT  0x20,R30
                 ; 0000 001B UBRRH=0x00;
000119 e0e0      	LDI  R30,LOW(0)
00011a bde0      	OUT  0x20,R30
                 ; 0000 001C UBRRL=0x33;
00011b e3e3      	LDI  R30,LOW(51)
00011c b9e9      	OUT  0x9,R30
                 ; 0000 001D 
                 ; 0000 001E 
                 ; 0000 001F // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
                 ; 0000 0020 // RS - PORTB Bit 0
                 ; 0000 0021 // RD - PORTB Bit 1
                 ; 0000 0022 // EN - PORTB Bit 2
                 ; 0000 0023 // D4 - PORTB Bit 4
                 ; 0000 0024 // D5 - PORTB Bit 5
                 ; 0000 0025 // D6 - PORTB Bit 6
                 ; 0000 0026 // D7 - PORTB Bit 7
                 ; 0000 0027 // Characters/line: 16
                 ; 0000 0028 lcd_init(16);
00011d e1a0      	LDI  R26,LOW(16)
00011e d0e0      	RCALL _lcd_init
                 ; 0000 0029 
                 ; 0000 002A 
                 ; 0000 002B PORTC.2 = 1;
00011f 9aaa      	SBI  0x15,2
                 ; 0000 002C 
                 ; 0000 002D lcd_gotoxy(0,0);
000120 e0e0      	LDI  R30,LOW(0)
000121 93ea      	ST   -Y,R30
000122 e0a0      	LDI  R26,LOW(0)
000123 d0a0      	RCALL _lcd_gotoxy
                 ; 0000 002E lcd_puts("    RezaSkar    ");
                +
000124 e6a0     +LDI R26 , LOW ( _0x5 + ( 0 ) )
000125 e0b1     +LDI R27 , HIGH ( _0x5 + ( 0 ) )
                 	__POINTW2MN _0x5,0
000126 d0c9      	RCALL _lcd_puts
                 ; 0000 002F delay_ms(2000);
000127 eda0      	LDI  R26,LOW(2000)
000128 e0b7      	LDI  R27,HIGH(2000)
000129 d2f8      	RCALL _delay_ms
                 ; 0000 0030 lcd_clear();
00012a d0a6      	RCALL _lcd_clear
                 ; 0000 0031 
                 ; 0000 0032 while (1)
                 _0x6:
                 ; 0000 0033       {
                 ; 0000 0034         gets(y,20);
00012b 01fe      	MOVW R30,R28
00012c d2b0      	RCALL SUBOPT_0x0
00012d e1a4      	LDI  R26,LOW(20)
00012e e0b0      	LDI  R27,0
00012f d103      	RCALL _gets
                 ; 0000 0035         strncpy(x,y,12);
000130 d2af      	RCALL SUBOPT_0x1
000131 01fe      	MOVW R30,R28
000132 9632      	ADIW R30,2
000133 d2a9      	RCALL SUBOPT_0x0
000134 e0ac      	LDI  R26,LOW(12)
000135 d292      	RCALL _strncpy
                 ; 0000 0036         x[12] = '\0';
000136 e0e0      	LDI  R30,LOW(0)
000137 a3e8      	STD  Y+32,R30
                 ; 0000 0037         if (strcmp(x,"R.S.KAR Open") == 0)
000138 d2a7      	RCALL SUBOPT_0x1
                +
000139 e7a1     +LDI R26 , LOW ( _0x5 + ( 17 ) )
00013a e0b1     +LDI R27 , HIGH ( _0x5 + ( 17 ) )
                 	__POINTW2MN _0x5,17
00013b d2a7      	RCALL SUBOPT_0x2
00013c f461      	BRNE _0x9
                 ; 0000 0038         {
                 ; 0000 0039             printf("Door Openning");
                +
00013d e5e6     +LDI R30 , LOW ( 2 * _0x0 + ( 30 ) )
00013e e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 30 ) )
                 	__POINTW1FN _0x0,30
00013f d29d      	RCALL SUBOPT_0x0
000140 e080      	LDI  R24,0
000141 d23e      	RCALL _printf
000142 9622      	ADIW R28,2
                 ; 0000 003A             //lcd_clear();
                 ; 0000 003B             //lcd_puts("Door Openning");
                 ; 0000 003C             Relay = 1;
000143 9aa8      	SBI  0x15,0
                 ; 0000 003D             delay_ms(300);
000144 e2ac      	LDI  R26,LOW(300)
000145 e0b1      	LDI  R27,HIGH(300)
000146 d2db      	RCALL _delay_ms
                 ; 0000 003E             Relay = 0;
000147 98a8      	CBI  0x15,0
                 ; 0000 003F         }
                 ; 0000 0040         else
000148 c05f      	RJMP _0xE
                 _0x9:
                 ; 0000 0041         {
                 ; 0000 0042             if (strcmp(x,"Turn On Red.") == 0)
000149 d296      	RCALL SUBOPT_0x1
                +
00014a e7ae     +LDI R26 , LOW ( _0x5 + ( 30 ) )
00014b e0b1     +LDI R27 , HIGH ( _0x5 + ( 30 ) )
                 	__POINTW2MN _0x5,30
00014c d296      	RCALL SUBOPT_0x2
00014d f431      	BRNE _0xF
                 ; 0000 0043             {
                 ; 0000 0044                 RED = 0;
00014e 98a9      	CBI  0x15,1
                 ; 0000 0045                 BLUE = 1;
00014f 9aac      	SBI  0x15,4
                 ; 0000 0046                 GREEN = 1;
000150 9aab      	SBI  0x15,3
                 ; 0000 0047                 //lcd_clear();
                 ; 0000 0048                 //lcd_puts("Red Led Turned On");
                 ; 0000 0049                 printf("Red Led Turned On");
                +
000151 e7e1     +LDI R30 , LOW ( 2 * _0x0 + ( 57 ) )
000152 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 57 ) )
                 	__POINTW1FN _0x0,57
000153 c04f      	RJMP _0x50
                 ; 0000 004A             }
                 ; 0000 004B             else
                 _0xF:
                 ; 0000 004C             {
                 ; 0000 004D                 if (strcmp(x,"Turn On Blue") == 0)
000154 d28b      	RCALL SUBOPT_0x1
                +
000155 e8ab     +LDI R26 , LOW ( _0x5 + ( 43 ) )
000156 e0b1     +LDI R27 , HIGH ( _0x5 + ( 43 ) )
                 	__POINTW2MN _0x5,43
000157 d28b      	RCALL SUBOPT_0x2
000158 f431      	BRNE _0x17
                 ; 0000 004E                 {
                 ; 0000 004F                     RED = 1;
000159 9aa9      	SBI  0x15,1
                 ; 0000 0050                     BLUE = 0;
00015a 98ac      	CBI  0x15,4
                 ; 0000 0051                     GREEN = 1;
00015b 9aab      	SBI  0x15,3
                 ; 0000 0052                     //lcd_clear();
                 ; 0000 0053                     //lcd_puts("Blue Led Turned On");
                 ; 0000 0054                     printf("Blue Led Turned On");
                +
00015c e9e0     +LDI R30 , LOW ( 2 * _0x0 + ( 88 ) )
00015d e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 88 ) )
                 	__POINTW1FN _0x0,88
00015e c044      	RJMP _0x50
                 ; 0000 0055                 }
                 ; 0000 0056                 else
                 _0x17:
                 ; 0000 0057                 {
                 ; 0000 0058                     if (strcmp(x,"TurnOn Green") == 0)
00015f d280      	RCALL SUBOPT_0x1
                +
000160 e9a8     +LDI R26 , LOW ( _0x5 + ( 56 ) )
000161 e0b1     +LDI R27 , HIGH ( _0x5 + ( 56 ) )
                 	__POINTW2MN _0x5,56
000162 d280      	RCALL SUBOPT_0x2
000163 f431      	BRNE _0x1F
                 ; 0000 0059                     {
                 ; 0000 005A                         RED = 1;
000164 9aa9      	SBI  0x15,1
                 ; 0000 005B                         BLUE = 1;
000165 9aac      	SBI  0x15,4
                 ; 0000 005C                         GREEN = 0;
000166 98ab      	CBI  0x15,3
                 ; 0000 005D                         //lcd_clear();
                 ; 0000 005E                         //lcd_puts("Green Led Turned On");
                 ; 0000 005F                         printf("Green Led Turned On");
                +
000167 ebe0     +LDI R30 , LOW ( 2 * _0x0 + ( 120 ) )
000168 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 120 ) )
                 	__POINTW1FN _0x0,120
000169 c039      	RJMP _0x50
                 ; 0000 0060                     }
                 ; 0000 0061                     else
                 _0x1F:
                 ; 0000 0062                     {
                 ; 0000 0063                         if (strcmp(x,"Turn On Cyan") == 0)
00016a d275      	RCALL SUBOPT_0x1
                +
00016b eaa5     +LDI R26 , LOW ( _0x5 + ( 69 ) )
00016c e0b1     +LDI R27 , HIGH ( _0x5 + ( 69 ) )
                 	__POINTW2MN _0x5,69
00016d d275      	RCALL SUBOPT_0x2
00016e f431      	BRNE _0x27
                 ; 0000 0064                         {
                 ; 0000 0065                             RED = 1;
00016f 9aa9      	SBI  0x15,1
                 ; 0000 0066                             BLUE = 0;
000170 98ac      	CBI  0x15,4
                 ; 0000 0067                             GREEN = 0;
000171 98ab      	CBI  0x15,3
                 ; 0000 0068                             //lcd_clear();
                 ; 0000 0069                             //lcd_puts("Cyan Led Turned On");
                 ; 0000 006A                             printf("Cyan Led Turned On");
                +
000172 ede1     +LDI R30 , LOW ( 2 * _0x0 + ( 153 ) )
000173 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 153 ) )
                 	__POINTW1FN _0x0,153
000174 c02e      	RJMP _0x50
                 ; 0000 006B                         }
                 ; 0000 006C                         else
                 _0x27:
                 ; 0000 006D                         {
                 ; 0000 006E                             if (strcmp(x,"Turn Off Led") == 0)
000175 d26a      	RCALL SUBOPT_0x1
                +
000176 eba2     +LDI R26 , LOW ( _0x5 + ( 82 ) )
000177 e0b1     +LDI R27 , HIGH ( _0x5 + ( 82 ) )
                 	__POINTW2MN _0x5,82
000178 d26a      	RCALL SUBOPT_0x2
000179 f431      	BRNE _0x2F
                 ; 0000 006F                             {
                 ; 0000 0070                                 RED = 1;
00017a 9aa9      	SBI  0x15,1
                 ; 0000 0071                                 BLUE = 1;
00017b 9aac      	SBI  0x15,4
                 ; 0000 0072                                 GREEN = 1;
00017c 9aab      	SBI  0x15,3
                 ; 0000 0073                                 //lcd_clear();
                 ; 0000 0074                                 //lcd_puts("Leds Turned Off !");
                 ; 0000 0075                                 printf("Leds Turned Off !");
                +
00017d efe1     +LDI R30 , LOW ( 2 * _0x0 + ( 185 ) )
00017e e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 185 ) )
                 	__POINTW1FN _0x0,185
00017f c023      	RJMP _0x50
                 ; 0000 0076                             }
                 ; 0000 0077                             else
                 _0x2F:
                 ; 0000 0078                             {
                 ; 0000 0079                                 if (strcmp(x,"TurnOnPurple") == 0)
000180 d25f      	RCALL SUBOPT_0x1
                +
000181 ebaf     +LDI R26 , LOW ( _0x5 + ( 95 ) )
000182 e0b1     +LDI R27 , HIGH ( _0x5 + ( 95 ) )
                 	__POINTW2MN _0x5,95
000183 d25f      	RCALL SUBOPT_0x2
000184 f431      	BRNE _0x37
                 ; 0000 007A                                 {
                 ; 0000 007B                                     RED = 0;
000185 98a9      	CBI  0x15,1
                 ; 0000 007C                                     BLUE = 0;
000186 98ac      	CBI  0x15,4
                 ; 0000 007D                                     GREEN = 1;
000187 9aab      	SBI  0x15,3
                 ; 0000 007E                                     //lcd_clear();
                 ; 0000 007F                                     //lcd_puts("Purple Led Turned On");
                 ; 0000 0080                                     printf("Purple Led Turned On");
                +
000188 e1e0     +LDI R30 , LOW ( 2 * _0x0 + ( 216 ) )
000189 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 216 ) )
                 	__POINTW1FN _0x0,216
00018a c018      	RJMP _0x50
                 ; 0000 0081                                 }
                 ; 0000 0082                                 else
                 _0x37:
                 ; 0000 0083                                 {
                 ; 0000 0084                                     if (strcmp(x,"TurnOn White") == 0)
00018b d254      	RCALL SUBOPT_0x1
                +
00018c ecac     +LDI R26 , LOW ( _0x5 + ( 108 ) )
00018d e0b1     +LDI R27 , HIGH ( _0x5 + ( 108 ) )
                 	__POINTW2MN _0x5,108
00018e d254      	RCALL SUBOPT_0x2
00018f f431      	BRNE _0x3F
                 ; 0000 0085                                     {
                 ; 0000 0086                                         RED = 0;
000190 98a9      	CBI  0x15,1
                 ; 0000 0087                                         BLUE = 0;
000191 98ac      	CBI  0x15,4
                 ; 0000 0088                                         GREEN = 0;
000192 98ab      	CBI  0x15,3
                 ; 0000 0089                                         //lcd_clear();
                 ; 0000 008A                                         //lcd_puts("White Led Turned On");
                 ; 0000 008B                                         printf("White Led Turned On");
                +
000193 e3e2     +LDI R30 , LOW ( 2 * _0x0 + ( 250 ) )
000194 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 250 ) )
                 	__POINTW1FN _0x0,250
000195 c00d      	RJMP _0x50
                 ; 0000 008C                                     }
                 ; 0000 008D                                     else
                 _0x3F:
                 ; 0000 008E                                     {
                 ; 0000 008F                                         if (strcmp(x,"TurnOnYellow") == 0)
000196 d249      	RCALL SUBOPT_0x1
                +
000197 eda9     +LDI R26 , LOW ( _0x5 + ( 121 ) )
000198 e0b1     +LDI R27 , HIGH ( _0x5 + ( 121 ) )
                 	__POINTW2MN _0x5,121
000199 d249      	RCALL SUBOPT_0x2
00019a f431      	BRNE _0x47
                 ; 0000 0090                                         {
                 ; 0000 0091                                             RED = 0;
00019b 98a9      	CBI  0x15,1
                 ; 0000 0092                                             BLUE = 1;
00019c 9aac      	SBI  0x15,4
                 ; 0000 0093                                             GREEN = 0;
00019d 98ab      	CBI  0x15,3
                 ; 0000 0094                                             //lcd_clear();
                 ; 0000 0095                                             //lcd_puts("Yellow Led Turned On");
                 ; 0000 0096                                             printf("Yellow Led Turned On");
                +
00019e e5e3     +LDI R30 , LOW ( 2 * _0x0 + ( 283 ) )
00019f e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 283 ) )
                 	__POINTW1FN _0x0,283
0001a0 c002      	RJMP _0x50
                 ; 0000 0097                                         }
                 ; 0000 0098                                         else
                 _0x47:
                 ; 0000 0099                                         {
                 ; 0000 009A                                             printf("Unknown Command");
                +
0001a1 e6e8     +LDI R30 , LOW ( 2 * _0x0 + ( 304 ) )
0001a2 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 304 ) )
                 	__POINTW1FN _0x0,304
                 _0x50:
0001a3 93fa      	ST   -Y,R31
0001a4 93ea      	ST   -Y,R30
0001a5 e080      	LDI  R24,0
0001a6 d1d9      	RCALL _printf
0001a7 9622      	ADIW R28,2
                 ; 0000 009B                                         }
                 ; 0000 009C                                     }
                 ; 0000 009D                                 }
                 ; 0000 009E                             }
                 ; 0000 009F                         }
                 ; 0000 00A0                     }
                 ; 0000 00A1                 }
                 ; 0000 00A2             }
                 ; 0000 00A3         }
                 _0xE:
                 ; 0000 00A4 
                 ; 0000 00A5 
                 ; 0000 00A6 
                 ; 0000 00A7       }
0001a8 cf82      	RJMP _0x6
                 ; 0000 00A8 }
                 _0x4F:
0001a9 cfff      	RJMP _0x4F
                 ; .FEND
                 
                 	.DSEG
                 _0x5:
000160           	.BYTE 0x86
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0001aa 93aa      	ST   -Y,R26
0001ab b3e8      	IN   R30,0x18
0001ac 70ef      	ANDI R30,LOW(0xF)
0001ad 2fae      	MOV  R26,R30
0001ae 81e8      	LD   R30,Y
0001af 7fe0      	ANDI R30,LOW(0xF0)
0001b0 2bea      	OR   R30,R26
0001b1 bbe8      	OUT  0x18,R30
0001b2 d233      	RCALL SUBOPT_0x3
0001b3 9ac2      	SBI  0x18,2
0001b4 d231      	RCALL SUBOPT_0x3
0001b5 98c2      	CBI  0x18,2
0001b6 d22f      	RCALL SUBOPT_0x3
0001b7 c079      	RJMP _0x2080002
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0001b8 93aa      	ST   -Y,R26
0001b9 81a8      	LD   R26,Y
0001ba dfef      	RCALL __lcd_write_nibble_G100
0001bb 81e8          ld    r30,y
0001bc 95e2          swap  r30
0001bd 83e8          st    y,r30
0001be 81a8      	LD   R26,Y
0001bf dfea      	RCALL __lcd_write_nibble_G100
                +
0001c0 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0001c1 958a     +DEC R24
0001c2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0001c3 c06d      	RJMP _0x2080002
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0001c4 93aa      	ST   -Y,R26
0001c5 81e8      	LD   R30,Y
0001c6 e0f0      	LDI  R31,0
0001c7 51ea      	SUBI R30,LOW(-__base_y_G100)
0001c8 4ffe      	SBCI R31,HIGH(-__base_y_G100)
0001c9 81e0      	LD   R30,Z
0001ca 81a9      	LDD  R26,Y+1
0001cb 0fae      	ADD  R26,R30
0001cc dfeb      	RCALL __lcd_write_data
0001cd 8059      	LDD  R5,Y+1
0001ce 8048      	LDD  R4,Y+0
0001cf 9622      	ADIW R28,2
0001d0 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0001d1 e0a2      	LDI  R26,LOW(2)
0001d2 d217      	RCALL SUBOPT_0x4
0001d3 e0ac      	LDI  R26,LOW(12)
0001d4 dfe3      	RCALL __lcd_write_data
0001d5 e0a1      	LDI  R26,LOW(1)
0001d6 d213      	RCALL SUBOPT_0x4
0001d7 e0e0      	LDI  R30,LOW(0)
0001d8 2e4e      	MOV  R4,R30
0001d9 2e5e      	MOV  R5,R30
0001da 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0001db 93aa      	ST   -Y,R26
0001dc 81a8      	LD   R26,Y
0001dd 30aa      	CPI  R26,LOW(0xA)
0001de f011      	BREQ _0x2000005
0001df 1457      	CP   R5,R7
0001e0 f048      	BRLO _0x2000004
                 _0x2000005:
0001e1 e0e0      	LDI  R30,LOW(0)
0001e2 93ea      	ST   -Y,R30
0001e3 9443      	INC  R4
0001e4 2da4      	MOV  R26,R4
0001e5 dfde      	RCALL _lcd_gotoxy
0001e6 81a8      	LD   R26,Y
0001e7 30aa      	CPI  R26,LOW(0xA)
0001e8 f409      	BRNE _0x2000007
0001e9 c047      	RJMP _0x2080002
                 _0x2000007:
                 _0x2000004:
0001ea 9453      	INC  R5
0001eb 9ac0      	SBI  0x18,0
0001ec 81a8      	LD   R26,Y
0001ed dfca      	RCALL __lcd_write_data
0001ee 98c0      	CBI  0x18,0
0001ef c041      	RJMP _0x2080002
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0001f0 d1fd      	RCALL SUBOPT_0x5
0001f1 931a      	ST   -Y,R17
                 _0x2000008:
0001f2 81a9      	LDD  R26,Y+1
0001f3 81ba      	LDD  R27,Y+1+1
0001f4 91ed      	LD   R30,X+
0001f5 83a9      	STD  Y+1,R26
0001f6 83ba      	STD  Y+1+1,R27
0001f7 2f1e      	MOV  R17,R30
0001f8 30e0      	CPI  R30,0
0001f9 f019      	BREQ _0x200000A
0001fa 2fa1      	MOV  R26,R17
0001fb dfdf      	RCALL _lcd_putchar
0001fc cff5      	RJMP _0x2000008
                 _0x200000A:
0001fd 8118      	LDD  R17,Y+0
0001fe c069      	RJMP _0x2080001
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0001ff 93aa      	ST   -Y,R26
000200 b3e7      	IN   R30,0x17
000201 6fe0      	ORI  R30,LOW(0xF0)
000202 bbe7      	OUT  0x17,R30
000203 9aba      	SBI  0x17,2
000204 9ab8      	SBI  0x17,0
000205 9ab9      	SBI  0x17,1
000206 98c2      	CBI  0x18,2
000207 98c0      	CBI  0x18,0
000208 98c1      	CBI  0x18,1
000209 8078      	LDD  R7,Y+0
00020a 81e8      	LD   R30,Y
00020b 58e0      	SUBI R30,-LOW(128)
                +
00020c 93e0 01e8+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
00020e 81e8      	LD   R30,Y
00020f 54e0      	SUBI R30,-LOW(192)
                +
000210 93e0 01e9+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000212 e1a4      	LDI  R26,LOW(20)
000213 e0b0      	LDI  R27,0
000214 d20d      	RCALL _delay_ms
000215 d1db      	RCALL SUBOPT_0x6
000216 d1da      	RCALL SUBOPT_0x6
000217 d1d9      	RCALL SUBOPT_0x6
000218 e2a0      	LDI  R26,LOW(32)
000219 df90      	RCALL __lcd_write_nibble_G100
                +
00021a ec88     +LDI R24 , LOW ( 200 )
00021b e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00021c 9701     +SBIW R24 , 1
00021d f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00021e e2a8      	LDI  R26,LOW(40)
00021f df98      	RCALL __lcd_write_data
000220 e0a4      	LDI  R26,LOW(4)
000221 df96      	RCALL __lcd_write_data
000222 e8a5      	LDI  R26,LOW(133)
000223 df94      	RCALL __lcd_write_data
000224 e0a6      	LDI  R26,LOW(6)
000225 df92      	RCALL __lcd_write_data
000226 dfaa      	RCALL _lcd_clear
000227 c009      	RJMP _0x2080002
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _getchar:
                 ; .FSTART _getchar
                 getchar0:
000228 9b5f           sbis usr,rxc
000229 cffe           rjmp getchar0
00022a b1ec           in   r30,udr
00022b 9508      	RET
                 ; .FEND
                 _putchar:
                 ; .FSTART _putchar
00022c 93aa      	ST   -Y,R26
                 putchar0:
00022d 9b5d           sbis usr,udre
00022e cffe           rjmp putchar0
00022f 81e8           ld   r30,y
000230 b9ec           out  udr,r30
                 _0x2080002:
000231 9621      	ADIW R28,1
000232 9508      	RET
                 ; .FEND
                 _gets:
                 ; .FSTART _gets
000233 d1ba      	RCALL SUBOPT_0x5
000234 d207      	RCALL __SAVELOCR6
                +
000235 810e     +LDD R16 , Y + 6
000236 811f     +LDD R17 , Y + 6 + 1
                 	__GETWRS 16,17,6
                +
000237 8528     +LDD R18 , Y + 8
000238 8539     +LDD R19 , Y + 8 + 1
                 	__GETWRS 18,19,8
                 _0x2020009:
000239 2e00      	MOV  R0,R16
00023a 2a01      	OR   R0,R17
00023b f0d1      	BREQ _0x202000B
                 _0x202000C:
00023c dfeb      	RCALL _getchar
00023d 2f5e      	MOV  R21,R30
00023e 3058      	CPI  R21,8
00023f f449      	BRNE _0x202000D
000240 d1b7      	RCALL SUBOPT_0x7
000241 170a      	CP   R16,R26
000242 071b      	CPC  R17,R27
000243 f420      	BRSH _0x202000E
                +
000244 5021     +SUBI R18 , LOW ( 1 )
000245 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                +
000246 5f0f     +SUBI R16 , LOW ( - 1 )
000247 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 _0x202000E:
000248 cff3      	RJMP _0x202000C
                 _0x202000D:
000249 305a      	CPI  R21,10
00024a f059      	BREQ _0x202000B
00024b 933f      	PUSH R19
00024c 932f      	PUSH R18
                +
00024d 5f2f     +SUBI R18 , LOW ( - 1 )
00024e 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00024f 2fe5      	MOV  R30,R21
000250 91af      	POP  R26
000251 91bf      	POP  R27
000252 93ec      	ST   X,R30
                +
000253 5001     +SUBI R16 , LOW ( 1 )
000254 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
000255 cfe3      	RJMP _0x2020009
                 _0x202000B:
000256 01d9      	MOVW R26,R18
000257 e0e0      	LDI  R30,LOW(0)
000258 93ec      	ST   X,R30
000259 85e8      	LDD  R30,Y+8
00025a 85f9      	LDD  R31,Y+8+1
00025b d1e7      	RCALL __LOADLOCR6
00025c 962a      	ADIW R28,10
00025d 9508      	RET
                 ; .FEND
                 _put_usart_G101:
                 ; .FSTART _put_usart_G101
00025e d18f      	RCALL SUBOPT_0x5
00025f 81aa      	LDD  R26,Y+2
000260 dfcb      	RCALL _putchar
000261 81a8      	LD   R26,Y
000262 81b9      	LDD  R27,Y+1
000263 91ed      	LD   R30,X+
000264 91fd      	LD   R31,X+
000265 9631      	ADIW R30,1
000266 93fe      	ST   -X,R31
000267 93ee      	ST   -X,R30
                 _0x2080001:
000268 9623      	ADIW R28,3
000269 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
00026a d183      	RCALL SUBOPT_0x5
00026b 9726      	SBIW R28,6
00026c d1cf      	RCALL __SAVELOCR6
00026d e010      	LDI  R17,0
00026e 85ac      	LDD  R26,Y+12
00026f 85bd      	LDD  R27,Y+12+1
000270 e0e0      	LDI  R30,LOW(0)
000271 e0f0      	LDI  R31,HIGH(0)
000272 93ed      	ST   X+,R30
000273 93fc      	ST   X,R31
                 _0x2020016:
000274 89ea      	LDD  R30,Y+18
000275 89fb      	LDD  R31,Y+18+1
000276 9631      	ADIW R30,1
000277 8bea      	STD  Y+18,R30
000278 8bfb      	STD  Y+18+1,R31
000279 9731      	SBIW R30,1
00027a 91e4      	LPM  R30,Z
00027b 2f2e      	MOV  R18,R30
00027c 30e0      	CPI  R30,0
00027d f409      	BRNE PC+2
00027e c0fb      	RJMP _0x2020018
00027f 2fe1      	MOV  R30,R17
000280 30e0      	CPI  R30,0
000281 f431      	BRNE _0x202001C
000282 3225      	CPI  R18,37
000283 f411      	BRNE _0x202001D
000284 e011      	LDI  R17,LOW(1)
000285 c001      	RJMP _0x202001E
                 _0x202001D:
000286 d174      	RCALL SUBOPT_0x8
                 _0x202001E:
000287 c0f1      	RJMP _0x202001B
                 _0x202001C:
000288 30e1      	CPI  R30,LOW(0x1)
000289 f4a1      	BRNE _0x202001F
00028a 3225      	CPI  R18,37
00028b f411      	BRNE _0x2020020
00028c d16e      	RCALL SUBOPT_0x8
00028d c0ea      	RJMP _0x20200CC
                 _0x2020020:
00028e e012      	LDI  R17,LOW(2)
00028f e040      	LDI  R20,LOW(0)
000290 e000      	LDI  R16,LOW(0)
000291 322d      	CPI  R18,45
000292 f411      	BRNE _0x2020021
000293 e001      	LDI  R16,LOW(1)
000294 c0e4      	RJMP _0x202001B
                 _0x2020021:
000295 322b      	CPI  R18,43
000296 f411      	BRNE _0x2020022
000297 e24b      	LDI  R20,LOW(43)
000298 c0e0      	RJMP _0x202001B
                 _0x2020022:
000299 3220      	CPI  R18,32
00029a f411      	BRNE _0x2020023
00029b e240      	LDI  R20,LOW(32)
00029c c0dc      	RJMP _0x202001B
                 _0x2020023:
00029d c002      	RJMP _0x2020024
                 _0x202001F:
00029e 30e2      	CPI  R30,LOW(0x2)
00029f f439      	BRNE _0x2020025
                 _0x2020024:
0002a0 e050      	LDI  R21,LOW(0)
0002a1 e013      	LDI  R17,LOW(3)
0002a2 3320      	CPI  R18,48
0002a3 f411      	BRNE _0x2020026
0002a4 6800      	ORI  R16,LOW(128)
0002a5 c0d3      	RJMP _0x202001B
                 _0x2020026:
0002a6 c003      	RJMP _0x2020027
                 _0x2020025:
0002a7 30e3      	CPI  R30,LOW(0x3)
0002a8 f009      	BREQ PC+2
0002a9 c0cf      	RJMP _0x202001B
                 _0x2020027:
0002aa 3320      	CPI  R18,48
0002ab f010      	BRLO _0x202002A
0002ac 332a      	CPI  R18,58
0002ad f008      	BRLO _0x202002B
                 _0x202002A:
0002ae c007      	RJMP _0x2020029
                 _0x202002B:
0002af e0aa      	LDI  R26,LOW(10)
0002b0 9f5a      	MUL  R21,R26
0002b1 2d50      	MOV  R21,R0
0002b2 2fe2      	MOV  R30,R18
0002b3 53e0      	SUBI R30,LOW(48)
0002b4 0f5e      	ADD  R21,R30
0002b5 c0c3      	RJMP _0x202001B
                 _0x2020029:
0002b6 2fe2      	MOV  R30,R18
0002b7 36e3      	CPI  R30,LOW(0x63)
0002b8 f439      	BRNE _0x202002F
0002b9 d148      	RCALL SUBOPT_0x9
0002ba d14a      	RCALL SUBOPT_0xA
0002bb d146      	RCALL SUBOPT_0x9
0002bc 81a4      	LDD  R26,Z+4
0002bd 93aa      	ST   -Y,R26
0002be d14a      	RCALL SUBOPT_0xB
0002bf c0b8      	RJMP _0x2020030
                 _0x202002F:
0002c0 37e3      	CPI  R30,LOW(0x73)
0002c1 f429      	BRNE _0x2020032
0002c2 d14c      	RCALL SUBOPT_0xC
0002c3 d14d      	RCALL SUBOPT_0xD
0002c4 d0ec      	RCALL _strlen
0002c5 2f1e      	MOV  R17,R30
0002c6 c007      	RJMP _0x2020033
                 _0x2020032:
0002c7 37e0      	CPI  R30,LOW(0x70)
0002c8 f449      	BRNE _0x2020035
0002c9 d145      	RCALL SUBOPT_0xC
0002ca d146      	RCALL SUBOPT_0xD
0002cb d0f0      	RCALL _strlenf
0002cc 2f1e      	MOV  R17,R30
0002cd 6008      	ORI  R16,LOW(8)
                 _0x2020033:
0002ce 6002      	ORI  R16,LOW(2)
0002cf 770f      	ANDI R16,LOW(127)
0002d0 e030      	LDI  R19,LOW(0)
0002d1 c02d      	RJMP _0x2020036
                 _0x2020035:
0002d2 36e4      	CPI  R30,LOW(0x64)
0002d3 f011      	BREQ _0x2020039
0002d4 36e9      	CPI  R30,LOW(0x69)
0002d5 f411      	BRNE _0x202003A
                 _0x2020039:
0002d6 6004      	ORI  R16,LOW(4)
0002d7 c002      	RJMP _0x202003B
                 _0x202003A:
0002d8 37e5      	CPI  R30,LOW(0x75)
0002d9 f429      	BRNE _0x202003C
                 _0x202003B:
0002da e2e6      	LDI  R30,LOW(_tbl10_G101*2)
0002db e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
0002dc d13b      	RCALL SUBOPT_0xE
0002dd e015      	LDI  R17,LOW(5)
0002de c00b      	RJMP _0x202003D
                 _0x202003C:
0002df 35e8      	CPI  R30,LOW(0x58)
0002e0 f411      	BRNE _0x202003F
0002e1 6008      	ORI  R16,LOW(8)
0002e2 c003      	RJMP _0x2020040
                 _0x202003F:
0002e3 37e8      	CPI  R30,LOW(0x78)
0002e4 f009      	BREQ PC+2
0002e5 c092      	RJMP _0x2020071
                 _0x2020040:
0002e6 e3e0      	LDI  R30,LOW(_tbl16_G101*2)
0002e7 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
0002e8 d12f      	RCALL SUBOPT_0xE
0002e9 e014      	LDI  R17,LOW(4)
                 _0x202003D:
0002ea ff02      	SBRS R16,2
0002eb c011      	RJMP _0x2020042
0002ec d122      	RCALL SUBOPT_0xC
0002ed d12d      	RCALL SUBOPT_0xF
0002ee 85ab      	LDD  R26,Y+11
0002ef 23aa      	TST  R26
0002f0 f432      	BRPL _0x2020043
0002f1 85ea      	LDD  R30,Y+10
0002f2 85fb      	LDD  R31,Y+10+1
0002f3 d13c      	RCALL __ANEGW1
0002f4 87ea      	STD  Y+10,R30
0002f5 87fb      	STD  Y+10+1,R31
0002f6 e24d      	LDI  R20,LOW(45)
                 _0x2020043:
0002f7 3040      	CPI  R20,0
0002f8 f011      	BREQ _0x2020044
0002f9 5f1f      	SUBI R17,-LOW(1)
0002fa c001      	RJMP _0x2020045
                 _0x2020044:
0002fb 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
0002fc c002      	RJMP _0x2020046
                 _0x2020042:
0002fd d111      	RCALL SUBOPT_0xC
0002fe d11c      	RCALL SUBOPT_0xF
                 _0x2020046:
                 _0x2020036:
0002ff fd00      	SBRC R16,0
000300 c010      	RJMP _0x2020047
                 _0x2020048:
000301 1715      	CP   R17,R21
000302 f470      	BRSH _0x202004A
000303 ff07      	SBRS R16,7
000304 c008      	RJMP _0x202004B
000305 ff02      	SBRS R16,2
000306 c004      	RJMP _0x202004C
000307 7f0b      	ANDI R16,LOW(251)
000308 2f24      	MOV  R18,R20
000309 5011      	SUBI R17,LOW(1)
00030a c001      	RJMP _0x202004D
                 _0x202004C:
00030b e320      	LDI  R18,LOW(48)
                 _0x202004D:
00030c c001      	RJMP _0x202004E
                 _0x202004B:
00030d e220      	LDI  R18,LOW(32)
                 _0x202004E:
00030e d0ec      	RCALL SUBOPT_0x8
00030f 5051      	SUBI R21,LOW(1)
000310 cff0      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
000311 2f31      	MOV  R19,R17
000312 ff01      	SBRS R16,1
000313 c014      	RJMP _0x202004F
                 _0x2020050:
000314 3030      	CPI  R19,0
000315 f089      	BREQ _0x2020052
000316 ff03      	SBRS R16,3
000317 c005      	RJMP _0x2020053
000318 81ee      	LDD  R30,Y+6
000319 81ff      	LDD  R31,Y+6+1
00031a 9125      	LPM  R18,Z+
00031b d0fc      	RCALL SUBOPT_0xE
00031c c004      	RJMP _0x2020054
                 _0x2020053:
00031d d0da      	RCALL SUBOPT_0x7
00031e 912d      	LD   R18,X+
00031f 83ae      	STD  Y+6,R26
000320 83bf      	STD  Y+6+1,R27
                 _0x2020054:
000321 d0d9      	RCALL SUBOPT_0x8
000322 3050      	CPI  R21,0
000323 f009      	BREQ _0x2020055
000324 5051      	SUBI R21,LOW(1)
                 _0x2020055:
000325 5031      	SUBI R19,LOW(1)
000326 cfed      	RJMP _0x2020050
                 _0x2020052:
000327 c047      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
000328 e320      	LDI  R18,LOW(48)
000329 81ee      	LDD  R30,Y+6
00032a 81ff      	LDD  R31,Y+6+1
00032b d10c      	RCALL __GETW1PF
00032c 87e8      	STD  Y+8,R30
00032d 87f9      	STD  Y+8+1,R31
00032e 81ee      	LDD  R30,Y+6
00032f 81ff      	LDD  R31,Y+6+1
000330 9632      	ADIW R30,2
000331 d0e6      	RCALL SUBOPT_0xE
                 _0x202005A:
000332 85e8      	LDD  R30,Y+8
000333 85f9      	LDD  R31,Y+8+1
000334 85aa      	LDD  R26,Y+10
000335 85bb      	LDD  R27,Y+10+1
000336 17ae      	CP   R26,R30
000337 07bf      	CPC  R27,R31
000338 f050      	BRLO _0x202005C
000339 5f2f      	SUBI R18,-LOW(1)
00033a 85a8      	LDD  R26,Y+8
00033b 85b9      	LDD  R27,Y+8+1
00033c 85ea      	LDD  R30,Y+10
00033d 85fb      	LDD  R31,Y+10+1
00033e 1bea      	SUB  R30,R26
00033f 0bfb      	SBC  R31,R27
000340 87ea      	STD  Y+10,R30
000341 87fb      	STD  Y+10+1,R31
000342 cfef      	RJMP _0x202005A
                 _0x202005C:
000343 332a      	CPI  R18,58
000344 f028      	BRLO _0x202005D
000345 ff03      	SBRS R16,3
000346 c002      	RJMP _0x202005E
000347 5f29      	SUBI R18,-LOW(7)
000348 c001      	RJMP _0x202005F
                 _0x202005E:
000349 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
00034a fd04      	SBRC R16,4
00034b c019      	RJMP _0x2020061
00034c 3321      	CPI  R18,49
00034d f420      	BRSH _0x2020063
00034e 85a8      	LDD  R26,Y+8
00034f 85b9      	LDD  R27,Y+8+1
000350 9711      	SBIW R26,1
000351 f409      	BRNE _0x2020062
                 _0x2020063:
000352 c009      	RJMP _0x20200CD
                 _0x2020062:
000353 1753      	CP   R21,R19
000354 f010      	BRLO _0x2020067
000355 ff00      	SBRS R16,0
000356 c001      	RJMP _0x2020068
                 _0x2020067:
000357 c011      	RJMP _0x2020066
                 _0x2020068:
000358 e220      	LDI  R18,LOW(32)
000359 ff07      	SBRS R16,7
00035a c00a      	RJMP _0x2020069
00035b e320      	LDI  R18,LOW(48)
                 _0x20200CD:
00035c 6100      	ORI  R16,LOW(16)
00035d ff02      	SBRS R16,2
00035e c006      	RJMP _0x202006A
00035f 7f0b      	ANDI R16,LOW(251)
000360 934a      	ST   -Y,R20
000361 d0a7      	RCALL SUBOPT_0xB
000362 3050      	CPI  R21,0
000363 f009      	BREQ _0x202006B
000364 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
000365 d095      	RCALL SUBOPT_0x8
000366 3050      	CPI  R21,0
000367 f009      	BREQ _0x202006C
000368 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
000369 5031      	SUBI R19,LOW(1)
00036a 85a8      	LDD  R26,Y+8
00036b 85b9      	LDD  R27,Y+8+1
00036c 9712      	SBIW R26,2
00036d f008      	BRLO _0x2020059
00036e cfb9      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
00036f ff00      	SBRS R16,0
000370 c007      	RJMP _0x202006D
                 _0x202006E:
000371 3050      	CPI  R21,0
000372 f029      	BREQ _0x2020070
000373 5051      	SUBI R21,LOW(1)
000374 e2e0      	LDI  R30,LOW(32)
000375 93ea      	ST   -Y,R30
000376 d092      	RCALL SUBOPT_0xB
000377 cff9      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
000378 e010      	LDI  R17,LOW(0)
                 _0x202001B:
000379 cefa      	RJMP _0x2020016
                 _0x2020018:
00037a 85ac      	LDD  R26,Y+12
00037b 85bd      	LDD  R27,Y+12+1
00037c d0b7      	RCALL __GETW1P
00037d d0c5      	RCALL __LOADLOCR6
00037e 9664      	ADIW R28,20
00037f 9508      	RET
                 ; .FEND
                 _printf:
                 ; .FSTART _printf
000380 92ff      	PUSH R15
000381 2ef8      	MOV  R15,R24
000382 9726      	SBIW R28,6
000383 d0bc      	RCALL __SAVELOCR2
000384 01de      	MOVW R26,R28
000385 9614      	ADIW R26,4
000386 d0a5      	RCALL __ADDW2R15
000387 018d      	MOVW R16,R26
000388 e0e0      	LDI  R30,LOW(0)
000389 83ec      	STD  Y+4,R30
00038a 83ed      	STD  Y+4+1,R30
00038b 83ee      	STD  Y+6,R30
00038c 83ef      	STD  Y+6+1,R30
00038d 01de      	MOVW R26,R28
00038e 9618      	ADIW R26,8
00038f d09c      	RCALL __ADDW2R15
000390 d0a3      	RCALL __GETW1P
000391 d04b      	RCALL SUBOPT_0x0
000392 931a      	ST   -Y,R17
000393 930a      	ST   -Y,R16
000394 e5ee      	LDI  R30,LOW(_put_usart_G101)
000395 e0f2      	LDI  R31,HIGH(_put_usart_G101)
000396 d046      	RCALL SUBOPT_0x0
000397 01de      	MOVW R26,R28
000398 9618      	ADIW R26,8
000399 ded0      	RCALL __print_G101
00039a d0ac      	RCALL __LOADLOCR2
00039b 9628      	ADIW R28,8
00039c 90ff      	POP  R15
00039d 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _strcmp:
                 ; .FSTART _strcmp
00039e d04f      	RCALL SUBOPT_0x5
00039f 91e9          ld   r30,y+
0003a0 91f9          ld   r31,y+
0003a1 91a9          ld   r26,y+
0003a2 91b9          ld   r27,y+
                 strcmp0:
0003a3 916d          ld   r22,x+
0003a4 9171          ld   r23,z+
0003a5 1767          cp   r22,r23
0003a6 f421          brne strcmp1
0003a7 2366          tst  r22
0003a8 f7d1          brne strcmp0
                 strcmp3:
0003a9 27ee          clr  r30
0003aa 9508          ret
                 strcmp1:
0003ab 1b67          sub  r22,r23
0003ac f3e1          breq strcmp3
0003ad e0e1          ldi  r30,1
0003ae f408          brcc strcmp2
0003af 50e2          subi r30,2
                 strcmp2:
0003b0 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
0003b1 d03c      	RCALL SUBOPT_0x5
0003b2 91a9          ld   r26,y+
0003b3 91b9          ld   r27,y+
0003b4 27ee          clr  r30
0003b5 27ff          clr  r31
                 strlen0:
0003b6 916d          ld   r22,x+
0003b7 2366          tst  r22
0003b8 f011          breq strlen1
0003b9 9631          adiw r30,1
0003ba cffb          rjmp strlen0
                 strlen1:
0003bb 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0003bc d031      	RCALL SUBOPT_0x5
0003bd 27aa          clr  r26
0003be 27bb          clr  r27
0003bf 91e9          ld   r30,y+
0003c0 91f9          ld   r31,y+
                 strlenf0:
0003c1 9005      	lpm  r0,z+
0003c2 2000          tst  r0
0003c3 f011          breq strlenf1
0003c4 9611          adiw r26,1
0003c5 cffb          rjmp strlenf0
                 strlenf1:
0003c6 01fd          movw r30,r26
0003c7 9508          ret
                 ; .FEND
                 _strncpy:
                 ; .FSTART _strncpy
0003c8 93aa      	ST   -Y,R26
0003c9 9179          ld   r23,y+
0003ca 91e9          ld   r30,y+
0003cb 91f9          ld   r31,y+
0003cc 91a9          ld   r26,y+
0003cd 91b9          ld   r27,y+
0003ce 01cd          movw r24,r26
                 strncpy0:
0003cf 2377          tst  r23
0003d0 f051          breq strncpy1
0003d1 957a          dec  r23
0003d2 9161          ld   r22,z+
0003d3 936d          st   x+,r22
0003d4 2366          tst  r22
0003d5 f7c9          brne strncpy0
                 strncpy2:
0003d6 2377          tst  r23
0003d7 f019          breq strncpy1
0003d8 957a          dec  r23
0003d9 936d          st   x+,r22
0003da cffb          rjmp strncpy2
                 strncpy1:
0003db 01fc          movw r30,r24
0003dc 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 __base_y_G100:
0001e6           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x0:
0003dd 93fa      	ST   -Y,R31
0003de 93ea      	ST   -Y,R30
0003df 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x1:
0003e0 01fe      	MOVW R30,R28
0003e1 9674      	ADIW R30,20
0003e2 cffa      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2:
0003e3 dfba      	RCALL _strcmp
0003e4 30e0      	CPI  R30,0
0003e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3:
                +
0003e6 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0003e7 958a     +DEC R24
0003e8 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0003e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
0003ea ddcd      	RCALL __lcd_write_data
0003eb e0a3      	LDI  R26,LOW(3)
0003ec e0b0      	LDI  R27,0
0003ed c034      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x5:
0003ee 93ba      	ST   -Y,R27
0003ef 93aa      	ST   -Y,R26
0003f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x6:
0003f1 e3a0      	LDI  R26,LOW(48)
0003f2 ddb7      	RCALL __lcd_write_nibble_G100
                +
0003f3 ec88     +LDI R24 , LOW ( 200 )
0003f4 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0003f5 9701     +SBIW R24 , 1
0003f6 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0003f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
0003f8 81ae      	LDD  R26,Y+6
0003f9 81bf      	LDD  R27,Y+6+1
0003fa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x8:
0003fb 932a      	ST   -Y,R18
0003fc 85ad      	LDD  R26,Y+13
0003fd 85be      	LDD  R27,Y+13+1
0003fe 85ef      	LDD  R30,Y+15
0003ff 89f8      	LDD  R31,Y+15+1
000400 9509      	ICALL
000401 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9:
000402 89e8      	LDD  R30,Y+16
000403 89f9      	LDD  R31,Y+16+1
000404 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xA:
000405 9734      	SBIW R30,4
000406 8be8      	STD  Y+16,R30
000407 8bf9      	STD  Y+16+1,R31
000408 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xB:
000409 85ad      	LDD  R26,Y+13
00040a 85be      	LDD  R27,Y+13+1
00040b 85ef      	LDD  R30,Y+15
00040c 89f8      	LDD  R31,Y+15+1
00040d 9509      	ICALL
00040e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
00040f dff2      	RCALL SUBOPT_0x9
000410 cff4      	RJMP SUBOPT_0xA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xD:
000411 89a8      	LDD  R26,Y+16
000412 89b9      	LDD  R27,Y+16+1
000413 9614      	ADIW R26,4
000414 d01f      	RCALL __GETW1P
000415 83ee      	STD  Y+6,R30
000416 83ff      	STD  Y+6+1,R31
000417 cfe0      	RJMP SUBOPT_0x7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
000418 83ee      	STD  Y+6,R30
000419 83ff      	STD  Y+6+1,R31
00041a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF:
00041b 89a8      	LDD  R26,Y+16
00041c 89b9      	LDD  R27,Y+16+1
00041d 9614      	ADIW R26,4
00041e d015      	RCALL __GETW1P
00041f 87ea      	STD  Y+10,R30
000420 87fb      	STD  Y+10+1,R31
000421 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000422 9610      	adiw r26,0
000423 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000424 ed80     +LDI R24 , LOW ( 0x7D0 )
000425 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000426 9701     +SBIW R24 , 1
000427 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000428 95a8      	wdr
000429 9711      	sbiw r26,1
00042a f7c9      	brne __delay_ms0
                 __delay_ms1:
00042b 9508      	ret
                 
                 __ADDW2R15:
00042c 2400      	CLR  R0
00042d 0daf      	ADD  R26,R15
00042e 1db0      	ADC  R27,R0
00042f 9508      	RET
                 
                 __ANEGW1:
000430 95f1      	NEG  R31
000431 95e1      	NEG  R30
000432 40f0      	SBCI R31,0
000433 9508      	RET
                 
                 __GETW1P:
000434 91ed      	LD   R30,X+
000435 91fc      	LD   R31,X
000436 9711      	SBIW R26,1
000437 9508      	RET
                 
                 __GETW1PF:
000438 9005      	LPM  R0,Z+
000439 91f4      	LPM  R31,Z
00043a 2de0      	MOV  R30,R0
00043b 9508      	RET
                 
                 __SAVELOCR6:
00043c 935a      	ST   -Y,R21
                 __SAVELOCR5:
00043d 934a      	ST   -Y,R20
                 __SAVELOCR4:
00043e 933a      	ST   -Y,R19
                 __SAVELOCR3:
00043f 932a      	ST   -Y,R18
                 __SAVELOCR2:
000440 931a      	ST   -Y,R17
000441 930a      	ST   -Y,R16
000442 9508      	RET
                 
                 __LOADLOCR6:
000443 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000444 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000445 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000446 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000447 8119      	LDD  R17,Y+1
000448 8108      	LD   R16,Y
000449 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8A register use summary:
r0 :  13 r1 :   1 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  33 r17:  26 r18:  32 r19:  12 r20:   9 r21:  21 r22:  12 r23:   8 
r24:  22 r25:   5 r26: 100 r27:  42 r28:  18 r29:   1 r30: 167 r31:  53 
x  :  19 y  : 143 z  :  16 
Registers used: 25 out of 35 (71.4%)

ATmega8A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   3 
adiw  :  21 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  20 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   7 
brlt  :   0 brmi  :   0 brne  :  40 brpl  :   1 brsh  :   3 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 cbi   :  18 
cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 clr   :   8 
cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 cp    :   6 
cpc   :   2 cpi   :  35 cpse  :   0 dec   :   5 des   :   0 eor   :   0 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 in    :   3 
inc   :   2 ld    :  37 ldd   :  64 ldi   : 130 lds   :   0 lpm   :  14 
lsl   :   0 lsr   :   0 mov   :  20 movw  :  14 mul   :   1 muls  :   0 
mulsu :   0 neg   :   2 nop   :   0 or    :   2 ori   :   7 out   :  18 
pop   :   3 push  :   3 rcall : 111 ret   :  32 reti  :   0 rjmp  :  97 
rol   :   0 ror   :   0 sbc   :   1 sbci  :   6 sbi   :  19 sbic  :   0 
sbis  :   2 sbiw  :  15 sbr   :   0 sbrc  :   2 sbrs  :  10 sec   :   0 
seh   :   0 sei   :   0 sen   :   0 ser   :   0 ses   :   0 set   :   0 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    :  40 std   :  25 
sts   :   2 sub   :   2 subi  :  21 swap  :   1 tst   :   7 wdr   :   1 

Instructions used: 51 out of 114 (44.7%)

ATmega8A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000894   1788    408   2196    8192  26.8%
[.dseg] 0x000060 0x0001ea      0    138    138    1024  13.5%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 3 warnings
