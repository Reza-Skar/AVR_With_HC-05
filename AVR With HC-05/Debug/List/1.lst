
AVRASM ver. 2.1.30  E:\AVR Projects\AVR With HC-05\Debug\List\1.asm Tue Aug 09 00:49:08 2022

                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega8A
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8A
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c0cf      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 cff6      	RJMP 0x00
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
                 
                 _tbl10_G100:
000013 2710
000014 03e8
000015 0064
000016 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000017 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000018 1000
000019 0100
00001a 0010
00001b 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
00001c 704f
00001d 6e65
00001e 4420
00001f 6f6f      	.DB  0x4F,0x70,0x65,0x6E,0x20,0x44,0x6F,0x6F
000020 2072
000021 6b4f
000022 4400
000023 6f6f      	.DB  0x72,0x20,0x4F,0x6B,0x0,0x44,0x6F,0x6F
000024 2072
000025 704f
000026 6e65
000027 696e      	.DB  0x72,0x20,0x4F,0x70,0x65,0x6E,0x6E,0x69
000028 676e
000029 5400
00002a 7275
00002b 206e      	.DB  0x6E,0x67,0x0,0x54,0x75,0x72,0x6E,0x20
00002c 6e4f
00002d 5220
00002e 6465
00002f 002e      	.DB  0x4F,0x6E,0x20,0x52,0x65,0x64,0x2E,0x0
000030 6552
000031 2064
000032 654c
000033 2064      	.DB  0x52,0x65,0x64,0x20,0x4C,0x65,0x64,0x20
000034 7554
000035 6e72
000036 6465
000037 4f20      	.DB  0x54,0x75,0x72,0x6E,0x65,0x64,0x20,0x4F
000038 006e
000039 7554
00003a 6e72
00003b 4f20      	.DB  0x6E,0x0,0x54,0x75,0x72,0x6E,0x20,0x4F
00003c 206e
00003d 6c42
00003e 6575
00003f 4200      	.DB  0x6E,0x20,0x42,0x6C,0x75,0x65,0x0,0x42
000040 756c
000041 2065
000042 654c
000043 2064      	.DB  0x6C,0x75,0x65,0x20,0x4C,0x65,0x64,0x20
000044 7554
000045 6e72
000046 6465
000047 4f20      	.DB  0x54,0x75,0x72,0x6E,0x65,0x64,0x20,0x4F
000048 006e
000049 7554
00004a 6e72
00004b 6e4f      	.DB  0x6E,0x0,0x54,0x75,0x72,0x6E,0x4F,0x6E
00004c 4720
00004d 6572
00004e 6e65
00004f 4700      	.DB  0x20,0x47,0x72,0x65,0x65,0x6E,0x0,0x47
000050 6572
000051 6e65
000052 4c20
000053 6465      	.DB  0x72,0x65,0x65,0x6E,0x20,0x4C,0x65,0x64
000054 5420
000055 7275
000056 656e
000057 2064      	.DB  0x20,0x54,0x75,0x72,0x6E,0x65,0x64,0x20
000058 6e4f
000059 5400
00005a 7275
00005b 206e      	.DB  0x4F,0x6E,0x0,0x54,0x75,0x72,0x6E,0x20
00005c 6e4f
00005d 4320
00005e 6179
00005f 006e      	.DB  0x4F,0x6E,0x20,0x43,0x79,0x61,0x6E,0x0
000060 7943
000061 6e61
000062 4c20
000063 6465      	.DB  0x43,0x79,0x61,0x6E,0x20,0x4C,0x65,0x64
000064 5420
000065 7275
000066 656e
000067 2064      	.DB  0x20,0x54,0x75,0x72,0x6E,0x65,0x64,0x20
000068 6e4f
000069 5400
00006a 7275
00006b 206e      	.DB  0x4F,0x6E,0x0,0x54,0x75,0x72,0x6E,0x20
00006c 664f
00006d 2066
00006e 654c
00006f 0064      	.DB  0x4F,0x66,0x66,0x20,0x4C,0x65,0x64,0x0
000070 654c
000071 7364
000072 5420
000073 7275      	.DB  0x4C,0x65,0x64,0x73,0x20,0x54,0x75,0x72
000074 656e
000075 2064
000076 664f
000077 2066      	.DB  0x6E,0x65,0x64,0x20,0x4F,0x66,0x66,0x20
000078 0021
000079 7554
00007a 6e72
00007b 6e4f      	.DB  0x21,0x0,0x54,0x75,0x72,0x6E,0x4F,0x6E
00007c 7550
00007d 7072
00007e 656c
00007f 5000      	.DB  0x50,0x75,0x72,0x70,0x6C,0x65,0x0,0x50
000080 7275
000081 6c70
000082 2065
000083 654c      	.DB  0x75,0x72,0x70,0x6C,0x65,0x20,0x4C,0x65
000084 2064
000085 7554
000086 6e72
000087 6465      	.DB  0x64,0x20,0x54,0x75,0x72,0x6E,0x65,0x64
000088 4f20
000089 006e
00008a 7554
00008b 6e72      	.DB  0x20,0x4F,0x6E,0x0,0x54,0x75,0x72,0x6E
00008c 6e4f
00008d 5720
00008e 6968
00008f 6574      	.DB  0x4F,0x6E,0x20,0x57,0x68,0x69,0x74,0x65
000090 5700
000091 6968
000092 6574
000093 4c20      	.DB  0x0,0x57,0x68,0x69,0x74,0x65,0x20,0x4C
000094 6465
000095 5420
000096 7275
000097 656e      	.DB  0x65,0x64,0x20,0x54,0x75,0x72,0x6E,0x65
000098 2064
000099 6e4f
00009a 5400
00009b 7275      	.DB  0x64,0x20,0x4F,0x6E,0x0,0x54,0x75,0x72
00009c 4f6e
00009d 596e
00009e 6c65
00009f 6f6c      	.DB  0x6E,0x4F,0x6E,0x59,0x65,0x6C,0x6C,0x6F
0000a0 0077
0000a1 6559
0000a2 6c6c
0000a3 776f      	.DB  0x77,0x0,0x59,0x65,0x6C,0x6C,0x6F,0x77
0000a4 4c20
0000a5 6465
0000a6 5420
0000a7 7275      	.DB  0x20,0x4C,0x65,0x64,0x20,0x54,0x75,0x72
0000a8 656e
0000a9 2064
0000aa 6e4f
0000ab 5500      	.DB  0x6E,0x65,0x64,0x20,0x4F,0x6E,0x0,0x55
0000ac 6b6e
0000ad 6f6e
0000ae 6e77
0000af 4320      	.DB  0x6E,0x6B,0x6E,0x6F,0x77,0x6E,0x20,0x43
0000b0 6d6f
0000b1 616d
0000b2 646e
E:\AVR Projects\AVR With HC-05\Debug\List\1.asm(1156): warning: .cseg .db misalignment - padding zero byte
0000b3 0000      	.DB  0x6F,0x6D,0x6D,0x61,0x6E,0x64,0x0
                 
                 __GLOBAL_INI_TBL:
0000b4 000d      	.DW  0x0D
0000b5 0160      	.DW  _0x7
0000b6 0038      	.DW  _0x0*2
                 
0000b7 000d      	.DW  0x0D
0000b8 016d      	.DW  _0x7+13
0000b9 0053      	.DW  _0x0*2+27
                 
0000ba 000d      	.DW  0x0D
0000bb 017a      	.DW  _0x7+26
0000bc 0072      	.DW  _0x0*2+58
                 
0000bd 000d      	.DW  0x0D
0000be 0187      	.DW  _0x7+39
0000bf 0092      	.DW  _0x0*2+90
                 
0000c0 000d      	.DW  0x0D
0000c1 0194      	.DW  _0x7+52
0000c2 00b3      	.DW  _0x0*2+123
                 
0000c3 000d      	.DW  0x0D
0000c4 01a1      	.DW  _0x7+65
0000c5 00d3      	.DW  _0x0*2+155
                 
0000c6 000d      	.DW  0x0D
0000c7 01ae      	.DW  _0x7+78
0000c8 00f2      	.DW  _0x0*2+186
                 
0000c9 000d      	.DW  0x0D
0000ca 01bb      	.DW  _0x7+91
0000cb 0114      	.DW  _0x0*2+220
                 
0000cc 000d      	.DW  0x0D
0000cd 01c8      	.DW  _0x7+104
0000ce 0135      	.DW  _0x0*2+253
                 
                 _0xFFFFFFFF:
0000cf 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
0000d0 94f8      	CLI
0000d1 27ee      	CLR  R30
0000d2 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0000d3 e0f1      	LDI  R31,1
0000d4 bffb      	OUT  GICR,R31
0000d5 bfeb      	OUT  GICR,R30
0000d6 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
0000d7 e08d      	LDI  R24,(14-2)+1
0000d8 e0a2      	LDI  R26,2
0000d9 27bb      	CLR  R27
                 __CLEAR_REG:
0000da 93ed      	ST   X+,R30
0000db 958a      	DEC  R24
0000dc f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000dd e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0000de e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0000df e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
0000e0 93ed      	ST   X+,R30
0000e1 9701      	SBIW R24,1
0000e2 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000e3 e6e8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000e4 e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000e5 9185      	LPM  R24,Z+
0000e6 9195      	LPM  R25,Z+
0000e7 9700      	SBIW R24,0
0000e8 f061      	BREQ __GLOBAL_INI_END
0000e9 91a5      	LPM  R26,Z+
0000ea 91b5      	LPM  R27,Z+
0000eb 9005      	LPM  R0,Z+
0000ec 9015      	LPM  R1,Z+
0000ed 01bf      	MOVW R22,R30
0000ee 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000ef 9005      	LPM  R0,Z+
0000f0 920d      	ST   X+,R0
0000f1 9701      	SBIW R24,1
0000f2 f7e1      	BRNE __GLOBAL_INI_LOOP
0000f3 01fb      	MOVW R30,R22
0000f4 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000f5 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000f6 bfed      	OUT  SPL,R30
0000f7 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000f8 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000f9 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000fa e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000fb c000      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <mega8.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <string.h>
                 ;
                 ;#define RED     PORTC.1
                 ;#define GREEN   PORTC.3
                 ;#define BLUE    PORTC.4
                 ;#define Relay   PORTC.0
                 ;
                 ;void main(void)
                 ; 0000 000C {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 000D     unsigned char x[13];
                 ; 0000 000E     unsigned char y[20];
                 ; 0000 000F 
                 ; 0000 0010     DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
0000fc 97a1      	SBIW R28,33
                 ;	x -> Y+20
                 ;	y -> Y+0
0000fd efef      	LDI  R30,LOW(255)
0000fe bbe7      	OUT  0x17,R30
                 ; 0000 0011     PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
0000ff e0e0      	LDI  R30,LOW(0)
000100 bbe8      	OUT  0x18,R30
                 ; 0000 0012     DDRC=(1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
000101 e3ef      	LDI  R30,LOW(63)
000102 bbe4      	OUT  0x14,R30
                 ; 0000 0013     PORTC=(0<<PORTC5) | (0<<PORTC4) |(0<<PORTC3) | (1<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
000103 e0e4      	LDI  R30,LOW(4)
000104 bbe5      	OUT  0x15,R30
                 ; 0000 0014 
                 ; 0000 0015     UCSRA=(0<<RXC) | (0<<TXC) | (0<<UDRE) | (0<<FE) | (0<<DOR) | (0<<UPE) | (0<<U2X) | (0<<MPCM);
000105 e0e0      	LDI  R30,LOW(0)
000106 b9eb      	OUT  0xB,R30
                 ; 0000 0016     UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (1<<RXEN) | (1<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
000107 e1e8      	LDI  R30,LOW(24)
000108 b9ea      	OUT  0xA,R30
                 ; 0000 0017     UCSRC=(1<<URSEL) | (0<<UMSEL) | (0<<UPM1) | (0<<UPM0) | (0<<USBS) | (1<<UCSZ1) | (1<<UCSZ0) | (0<<UCPOL);
000109 e8e6      	LDI  R30,LOW(134)
00010a bde0      	OUT  0x20,R30
                 ; 0000 0018     UBRRH=0x00;
00010b e0e0      	LDI  R30,LOW(0)
00010c bde0      	OUT  0x20,R30
                 ; 0000 0019     UBRRL=0x33;
00010d e3e3      	LDI  R30,LOW(51)
00010e b9e9      	OUT  0x9,R30
                 ; 0000 001A 
                 ; 0000 001B     while (1)
                 _0x3:
                 ; 0000 001C     {
                 ; 0000 001D         gets(y,20);
00010f 01fe      	MOVW R30,R28
000110 d232      	RCALL SUBOPT_0x0
000111 e1a4      	LDI  R26,LOW(20)
000112 e0b0      	LDI  R27,0
000113 d085      	RCALL _gets
                 ; 0000 001E         strncpy(x,y,12);
000114 d231      	RCALL SUBOPT_0x1
000115 01fe      	MOVW R30,R28
000116 9632      	ADIW R30,2
000117 d22b      	RCALL SUBOPT_0x0
000118 e0ac      	LDI  R26,LOW(12)
000119 d214      	RCALL _strncpy
                 ; 0000 001F         x[12] = '\0';
00011a e0e0      	LDI  R30,LOW(0)
00011b a3e8      	STD  Y+32,R30
                 ; 0000 0020 
                 ; 0000 0021         if (strcmp(x,"Open Door Ok") == 0)
00011c d229      	RCALL SUBOPT_0x1
                +
00011d e6a0     +LDI R26 , LOW ( _0x7 + ( 0 ) )
00011e e0b1     +LDI R27 , HIGH ( _0x7 + ( 0 ) )
                 	__POINTW2MN _0x7,0
00011f d229      	RCALL SUBOPT_0x2
000120 f461      	BRNE _0x6
                 ; 0000 0022         {
                 ; 0000 0023             printf("Door Openning");
                +
000121 e4e5     +LDI R30 , LOW ( 2 * _0x0 + ( 13 ) )
000122 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 13 ) )
                 	__POINTW1FN _0x0,13
000123 d21f      	RCALL SUBOPT_0x0
000124 e080      	LDI  R24,0
000125 d1c0      	RCALL _printf
000126 9622      	ADIW R28,2
                 ; 0000 0024             Relay = 1;
000127 9aa8      	SBI  0x15,0
                 ; 0000 0025             delay_ms(300);
000128 e2ac      	LDI  R26,LOW(300)
000129 e0b1      	LDI  R27,HIGH(300)
00012a d24e      	RCALL _delay_ms
                 ; 0000 0026             Relay = 0;
00012b 98a8      	CBI  0x15,0
                 ; 0000 0027         }
                 ; 0000 0028         else
00012c c05f      	RJMP _0xC
                 _0x6:
                 ; 0000 0029         {
                 ; 0000 002A             if (strcmp(x,"Turn On Red.") == 0)
00012d d218      	RCALL SUBOPT_0x1
                +
00012e e6ad     +LDI R26 , LOW ( _0x7 + ( 13 ) )
00012f e0b1     +LDI R27 , HIGH ( _0x7 + ( 13 ) )
                 	__POINTW2MN _0x7,13
000130 d218      	RCALL SUBOPT_0x2
000131 f431      	BRNE _0xD
                 ; 0000 002B             {
                 ; 0000 002C                 RED = 0;
000132 98a9      	CBI  0x15,1
                 ; 0000 002D                 BLUE = 1;
000133 9aac      	SBI  0x15,4
                 ; 0000 002E                 GREEN = 1;
000134 9aab      	SBI  0x15,3
                 ; 0000 002F                 printf("Red Led Turned On");
                +
000135 e6e0     +LDI R30 , LOW ( 2 * _0x0 + ( 40 ) )
000136 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 40 ) )
                 	__POINTW1FN _0x0,40
000137 c04f      	RJMP _0x4E
                 ; 0000 0030             }
                 ; 0000 0031             else
                 _0xD:
                 ; 0000 0032             {
                 ; 0000 0033                 if (strcmp(x,"Turn On Blue") == 0)
000138 d20d      	RCALL SUBOPT_0x1
                +
000139 e7aa     +LDI R26 , LOW ( _0x7 + ( 26 ) )
00013a e0b1     +LDI R27 , HIGH ( _0x7 + ( 26 ) )
                 	__POINTW2MN _0x7,26
00013b d20d      	RCALL SUBOPT_0x2
00013c f431      	BRNE _0x15
                 ; 0000 0034                 {
                 ; 0000 0035                     RED = 1;
00013d 9aa9      	SBI  0x15,1
                 ; 0000 0036                     BLUE = 0;
00013e 98ac      	CBI  0x15,4
                 ; 0000 0037                     GREEN = 1;
00013f 9aab      	SBI  0x15,3
                 ; 0000 0038                     printf("Blue Led Turned On");
                +
000140 e7ef     +LDI R30 , LOW ( 2 * _0x0 + ( 71 ) )
000141 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 71 ) )
                 	__POINTW1FN _0x0,71
000142 c044      	RJMP _0x4E
                 ; 0000 0039                 }
                 ; 0000 003A                 else
                 _0x15:
                 ; 0000 003B                 {
                 ; 0000 003C                     if (strcmp(x,"TurnOn Green") == 0)
000143 d202      	RCALL SUBOPT_0x1
                +
000144 e8a7     +LDI R26 , LOW ( _0x7 + ( 39 ) )
000145 e0b1     +LDI R27 , HIGH ( _0x7 + ( 39 ) )
                 	__POINTW2MN _0x7,39
000146 d202      	RCALL SUBOPT_0x2
000147 f431      	BRNE _0x1D
                 ; 0000 003D                     {
                 ; 0000 003E                         RED = 1;
000148 9aa9      	SBI  0x15,1
                 ; 0000 003F                         BLUE = 1;
000149 9aac      	SBI  0x15,4
                 ; 0000 0040                         GREEN = 0;
00014a 98ab      	CBI  0x15,3
                 ; 0000 0041                         printf("Green Led Turned On");
                +
00014b e9ef     +LDI R30 , LOW ( 2 * _0x0 + ( 103 ) )
00014c e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 103 ) )
                 	__POINTW1FN _0x0,103
00014d c039      	RJMP _0x4E
                 ; 0000 0042                     }
                 ; 0000 0043                     else
                 _0x1D:
                 ; 0000 0044                     {
                 ; 0000 0045                         if (strcmp(x,"Turn On Cyan") == 0)
00014e d1f7      	RCALL SUBOPT_0x1
                +
00014f e9a4     +LDI R26 , LOW ( _0x7 + ( 52 ) )
000150 e0b1     +LDI R27 , HIGH ( _0x7 + ( 52 ) )
                 	__POINTW2MN _0x7,52
000151 d1f7      	RCALL SUBOPT_0x2
000152 f431      	BRNE _0x25
                 ; 0000 0046                         {
                 ; 0000 0047                             RED = 1;
000153 9aa9      	SBI  0x15,1
                 ; 0000 0048                             BLUE = 0;
000154 98ac      	CBI  0x15,4
                 ; 0000 0049                             GREEN = 0;
000155 98ab      	CBI  0x15,3
                 ; 0000 004A                             printf("Cyan Led Turned On");
                +
000156 ece0     +LDI R30 , LOW ( 2 * _0x0 + ( 136 ) )
000157 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 136 ) )
                 	__POINTW1FN _0x0,136
000158 c02e      	RJMP _0x4E
                 ; 0000 004B                         }
                 ; 0000 004C                         else
                 _0x25:
                 ; 0000 004D                         {
                 ; 0000 004E                             if (strcmp(x,"Turn Off Led") == 0)
000159 d1ec      	RCALL SUBOPT_0x1
                +
00015a eaa1     +LDI R26 , LOW ( _0x7 + ( 65 ) )
00015b e0b1     +LDI R27 , HIGH ( _0x7 + ( 65 ) )
                 	__POINTW2MN _0x7,65
00015c d1ec      	RCALL SUBOPT_0x2
00015d f431      	BRNE _0x2D
                 ; 0000 004F                             {
                 ; 0000 0050                                 RED = 1;
00015e 9aa9      	SBI  0x15,1
                 ; 0000 0051                                 BLUE = 1;
00015f 9aac      	SBI  0x15,4
                 ; 0000 0052                                 GREEN = 1;
000160 9aab      	SBI  0x15,3
                 ; 0000 0053                                 printf("Leds Turned Off !");
                +
000161 eee0     +LDI R30 , LOW ( 2 * _0x0 + ( 168 ) )
000162 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 168 ) )
                 	__POINTW1FN _0x0,168
000163 c023      	RJMP _0x4E
                 ; 0000 0054                             }
                 ; 0000 0055                             else
                 _0x2D:
                 ; 0000 0056                             {
                 ; 0000 0057                                 if (strcmp(x,"TurnOnPurple") == 0)
000164 d1e1      	RCALL SUBOPT_0x1
                +
000165 eaae     +LDI R26 , LOW ( _0x7 + ( 78 ) )
000166 e0b1     +LDI R27 , HIGH ( _0x7 + ( 78 ) )
                 	__POINTW2MN _0x7,78
000167 d1e1      	RCALL SUBOPT_0x2
000168 f431      	BRNE _0x35
                 ; 0000 0058                                 {
                 ; 0000 0059                                     RED = 0;
000169 98a9      	CBI  0x15,1
                 ; 0000 005A                                     BLUE = 0;
00016a 98ac      	CBI  0x15,4
                 ; 0000 005B                                     GREEN = 1;
00016b 9aab      	SBI  0x15,3
                 ; 0000 005C                                     printf("Purple Led Turned On");
                +
00016c efef     +LDI R30 , LOW ( 2 * _0x0 + ( 199 ) )
00016d e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 199 ) )
                 	__POINTW1FN _0x0,199
00016e c018      	RJMP _0x4E
                 ; 0000 005D                                 }
                 ; 0000 005E                                 else
                 _0x35:
                 ; 0000 005F                                 {
                 ; 0000 0060                                     if (strcmp(x,"TurnOn White") == 0)
00016f d1d6      	RCALL SUBOPT_0x1
                +
000170 ebab     +LDI R26 , LOW ( _0x7 + ( 91 ) )
000171 e0b1     +LDI R27 , HIGH ( _0x7 + ( 91 ) )
                 	__POINTW2MN _0x7,91
000172 d1d6      	RCALL SUBOPT_0x2
000173 f431      	BRNE _0x3D
                 ; 0000 0061                                     {
                 ; 0000 0062                                         RED = 0;
000174 98a9      	CBI  0x15,1
                 ; 0000 0063                                         BLUE = 0;
000175 98ac      	CBI  0x15,4
                 ; 0000 0064                                         GREEN = 0;
000176 98ab      	CBI  0x15,3
                 ; 0000 0065                                         printf("White Led Turned On");
                +
000177 e2e1     +LDI R30 , LOW ( 2 * _0x0 + ( 233 ) )
000178 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 233 ) )
                 	__POINTW1FN _0x0,233
000179 c00d      	RJMP _0x4E
                 ; 0000 0066                                     }
                 ; 0000 0067                                     else
                 _0x3D:
                 ; 0000 0068                                     {
                 ; 0000 0069                                         if (strcmp(x,"TurnOnYellow") == 0)
00017a d1cb      	RCALL SUBOPT_0x1
                +
00017b eca8     +LDI R26 , LOW ( _0x7 + ( 104 ) )
00017c e0b1     +LDI R27 , HIGH ( _0x7 + ( 104 ) )
                 	__POINTW2MN _0x7,104
00017d d1cb      	RCALL SUBOPT_0x2
00017e f431      	BRNE _0x45
                 ; 0000 006A                                         {
                 ; 0000 006B                                             RED = 0;
00017f 98a9      	CBI  0x15,1
                 ; 0000 006C                                             BLUE = 1;
000180 9aac      	SBI  0x15,4
                 ; 0000 006D                                             GREEN = 0;
000181 98ab      	CBI  0x15,3
                 ; 0000 006E                                             printf("Yellow Led Turned On");
                +
000182 e4e2     +LDI R30 , LOW ( 2 * _0x0 + ( 266 ) )
000183 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 266 ) )
                 	__POINTW1FN _0x0,266
000184 c002      	RJMP _0x4E
                 ; 0000 006F                                         }
                 ; 0000 0070                                         else
                 _0x45:
                 ; 0000 0071                                         {
                 ; 0000 0072                                             printf("Unknown Command");
                +
000185 e5e7     +LDI R30 , LOW ( 2 * _0x0 + ( 287 ) )
000186 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 287 ) )
                 	__POINTW1FN _0x0,287
                 _0x4E:
000187 93fa      	ST   -Y,R31
000188 93ea      	ST   -Y,R30
000189 e080      	LDI  R24,0
00018a d15b      	RCALL _printf
00018b 9622      	ADIW R28,2
                 ; 0000 0073                                         }
                 ; 0000 0074                                     }
                 ; 0000 0075                                 }
                 ; 0000 0076                             }
                 ; 0000 0077                         }
                 ; 0000 0078                     }
                 ; 0000 0079                 }
                 ; 0000 007A             }
                 ; 0000 007B         }
                 _0xC:
                 ; 0000 007C     }
00018c cf82      	RJMP _0x3
                 ; 0000 007D }
                 _0x4D:
00018d cfff      	RJMP _0x4D
                 ; .FEND
                 
                 	.DSEG
                 _0x7:
000160           	.BYTE 0x75
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _getchar:
                 ; .FSTART _getchar
                 getchar0:
00018e 9b5f           sbis usr,rxc
00018f cffe           rjmp getchar0
000190 b1ec           in   r30,udr
000191 9508      	RET
                 ; .FEND
                 _putchar:
                 ; .FSTART _putchar
000192 93aa      	ST   -Y,R26
                 putchar0:
000193 9b5d           sbis usr,udre
000194 cffe           rjmp putchar0
000195 81e8           ld   r30,y
000196 b9ec           out  udr,r30
000197 9621      	ADIW R28,1
000198 9508      	RET
                 ; .FEND
                 _gets:
                 ; .FSTART _gets
000199 d1b2      	RCALL SUBOPT_0x3
00019a d1f8      	RCALL __SAVELOCR6
                +
00019b 810e     +LDD R16 , Y + 6
00019c 811f     +LDD R17 , Y + 6 + 1
                 	__GETWRS 16,17,6
                +
00019d 8528     +LDD R18 , Y + 8
00019e 8539     +LDD R19 , Y + 8 + 1
                 	__GETWRS 18,19,8
                 _0x2000009:
00019f 2e00      	MOV  R0,R16
0001a0 2a01      	OR   R0,R17
0001a1 f0d1      	BREQ _0x200000B
                 _0x200000C:
0001a2 dfeb      	RCALL _getchar
0001a3 2f5e      	MOV  R21,R30
0001a4 3058      	CPI  R21,8
0001a5 f449      	BRNE _0x200000D
0001a6 d1a8      	RCALL SUBOPT_0x4
0001a7 170a      	CP   R16,R26
0001a8 071b      	CPC  R17,R27
0001a9 f420      	BRSH _0x200000E
                +
0001aa 5021     +SUBI R18 , LOW ( 1 )
0001ab 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                +
0001ac 5f0f     +SUBI R16 , LOW ( - 1 )
0001ad 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 _0x200000E:
0001ae cff3      	RJMP _0x200000C
                 _0x200000D:
0001af 305a      	CPI  R21,10
0001b0 f059      	BREQ _0x200000B
0001b1 933f      	PUSH R19
0001b2 932f      	PUSH R18
                +
0001b3 5f2f     +SUBI R18 , LOW ( - 1 )
0001b4 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0001b5 2fe5      	MOV  R30,R21
0001b6 91af      	POP  R26
0001b7 91bf      	POP  R27
0001b8 93ec      	ST   X,R30
                +
0001b9 5001     +SUBI R16 , LOW ( 1 )
0001ba 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
0001bb cfe3      	RJMP _0x2000009
                 _0x200000B:
0001bc 01d9      	MOVW R26,R18
0001bd e0e0      	LDI  R30,LOW(0)
0001be 93ec      	ST   X,R30
0001bf 85e8      	LDD  R30,Y+8
0001c0 85f9      	LDD  R31,Y+8+1
0001c1 d1d8      	RCALL __LOADLOCR6
0001c2 962a      	ADIW R28,10
0001c3 9508      	RET
                 ; .FEND
                 _put_usart_G100:
                 ; .FSTART _put_usart_G100
0001c4 d187      	RCALL SUBOPT_0x3
0001c5 81aa      	LDD  R26,Y+2
0001c6 dfcb      	RCALL _putchar
0001c7 81a8      	LD   R26,Y
0001c8 81b9      	LDD  R27,Y+1
0001c9 91ed      	LD   R30,X+
0001ca 91fd      	LD   R31,X+
0001cb 9631      	ADIW R30,1
0001cc 93fe      	ST   -X,R31
0001cd 93ee      	ST   -X,R30
0001ce 9623      	ADIW R28,3
0001cf 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0001d0 d17b      	RCALL SUBOPT_0x3
0001d1 9726      	SBIW R28,6
0001d2 d1c0      	RCALL __SAVELOCR6
0001d3 e010      	LDI  R17,0
0001d4 85ac      	LDD  R26,Y+12
0001d5 85bd      	LDD  R27,Y+12+1
0001d6 e0e0      	LDI  R30,LOW(0)
0001d7 e0f0      	LDI  R31,HIGH(0)
0001d8 93ed      	ST   X+,R30
0001d9 93fc      	ST   X,R31
                 _0x2000016:
0001da 89ea      	LDD  R30,Y+18
0001db 89fb      	LDD  R31,Y+18+1
0001dc 9631      	ADIW R30,1
0001dd 8bea      	STD  Y+18,R30
0001de 8bfb      	STD  Y+18+1,R31
0001df 9731      	SBIW R30,1
0001e0 91e4      	LPM  R30,Z
0001e1 2f2e      	MOV  R18,R30
0001e2 30e0      	CPI  R30,0
0001e3 f409      	BRNE PC+2
0001e4 c0fb      	RJMP _0x2000018
0001e5 2fe1      	MOV  R30,R17
0001e6 30e0      	CPI  R30,0
0001e7 f431      	BRNE _0x200001C
0001e8 3225      	CPI  R18,37
0001e9 f411      	BRNE _0x200001D
0001ea e011      	LDI  R17,LOW(1)
0001eb c001      	RJMP _0x200001E
                 _0x200001D:
0001ec d165      	RCALL SUBOPT_0x5
                 _0x200001E:
0001ed c0f1      	RJMP _0x200001B
                 _0x200001C:
0001ee 30e1      	CPI  R30,LOW(0x1)
0001ef f4a1      	BRNE _0x200001F
0001f0 3225      	CPI  R18,37
0001f1 f411      	BRNE _0x2000020
0001f2 d15f      	RCALL SUBOPT_0x5
0001f3 c0ea      	RJMP _0x20000CC
                 _0x2000020:
0001f4 e012      	LDI  R17,LOW(2)
0001f5 e040      	LDI  R20,LOW(0)
0001f6 e000      	LDI  R16,LOW(0)
0001f7 322d      	CPI  R18,45
0001f8 f411      	BRNE _0x2000021
0001f9 e001      	LDI  R16,LOW(1)
0001fa c0e4      	RJMP _0x200001B
                 _0x2000021:
0001fb 322b      	CPI  R18,43
0001fc f411      	BRNE _0x2000022
0001fd e24b      	LDI  R20,LOW(43)
0001fe c0e0      	RJMP _0x200001B
                 _0x2000022:
0001ff 3220      	CPI  R18,32
000200 f411      	BRNE _0x2000023
000201 e240      	LDI  R20,LOW(32)
000202 c0dc      	RJMP _0x200001B
                 _0x2000023:
000203 c002      	RJMP _0x2000024
                 _0x200001F:
000204 30e2      	CPI  R30,LOW(0x2)
000205 f439      	BRNE _0x2000025
                 _0x2000024:
000206 e050      	LDI  R21,LOW(0)
000207 e013      	LDI  R17,LOW(3)
000208 3320      	CPI  R18,48
000209 f411      	BRNE _0x2000026
00020a 6800      	ORI  R16,LOW(128)
00020b c0d3      	RJMP _0x200001B
                 _0x2000026:
00020c c003      	RJMP _0x2000027
                 _0x2000025:
00020d 30e3      	CPI  R30,LOW(0x3)
00020e f009      	BREQ PC+2
00020f c0cf      	RJMP _0x200001B
                 _0x2000027:
000210 3320      	CPI  R18,48
000211 f010      	BRLO _0x200002A
000212 332a      	CPI  R18,58
000213 f008      	BRLO _0x200002B
                 _0x200002A:
000214 c007      	RJMP _0x2000029
                 _0x200002B:
000215 e0aa      	LDI  R26,LOW(10)
000216 9f5a      	MUL  R21,R26
000217 2d50      	MOV  R21,R0
000218 2fe2      	MOV  R30,R18
000219 53e0      	SUBI R30,LOW(48)
00021a 0f5e      	ADD  R21,R30
00021b c0c3      	RJMP _0x200001B
                 _0x2000029:
00021c 2fe2      	MOV  R30,R18
00021d 36e3      	CPI  R30,LOW(0x63)
00021e f439      	BRNE _0x200002F
00021f d139      	RCALL SUBOPT_0x6
000220 d13b      	RCALL SUBOPT_0x7
000221 d137      	RCALL SUBOPT_0x6
000222 81a4      	LDD  R26,Z+4
000223 93aa      	ST   -Y,R26
000224 d13b      	RCALL SUBOPT_0x8
000225 c0b8      	RJMP _0x2000030
                 _0x200002F:
000226 37e3      	CPI  R30,LOW(0x73)
000227 f429      	BRNE _0x2000032
000228 d13d      	RCALL SUBOPT_0x9
000229 d13e      	RCALL SUBOPT_0xA
00022a d0ec      	RCALL _strlen
00022b 2f1e      	MOV  R17,R30
00022c c007      	RJMP _0x2000033
                 _0x2000032:
00022d 37e0      	CPI  R30,LOW(0x70)
00022e f449      	BRNE _0x2000035
00022f d136      	RCALL SUBOPT_0x9
000230 d137      	RCALL SUBOPT_0xA
000231 d0f0      	RCALL _strlenf
000232 2f1e      	MOV  R17,R30
000233 6008      	ORI  R16,LOW(8)
                 _0x2000033:
000234 6002      	ORI  R16,LOW(2)
000235 770f      	ANDI R16,LOW(127)
000236 e030      	LDI  R19,LOW(0)
000237 c02d      	RJMP _0x2000036
                 _0x2000035:
000238 36e4      	CPI  R30,LOW(0x64)
000239 f011      	BREQ _0x2000039
00023a 36e9      	CPI  R30,LOW(0x69)
00023b f411      	BRNE _0x200003A
                 _0x2000039:
00023c 6004      	ORI  R16,LOW(4)
00023d c002      	RJMP _0x200003B
                 _0x200003A:
00023e 37e5      	CPI  R30,LOW(0x75)
00023f f429      	BRNE _0x200003C
                 _0x200003B:
000240 e2e6      	LDI  R30,LOW(_tbl10_G100*2)
000241 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000242 d12c      	RCALL SUBOPT_0xB
000243 e015      	LDI  R17,LOW(5)
000244 c00b      	RJMP _0x200003D
                 _0x200003C:
000245 35e8      	CPI  R30,LOW(0x58)
000246 f411      	BRNE _0x200003F
000247 6008      	ORI  R16,LOW(8)
000248 c003      	RJMP _0x2000040
                 _0x200003F:
000249 37e8      	CPI  R30,LOW(0x78)
00024a f009      	BREQ PC+2
00024b c092      	RJMP _0x2000071
                 _0x2000040:
00024c e3e0      	LDI  R30,LOW(_tbl16_G100*2)
00024d e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
00024e d120      	RCALL SUBOPT_0xB
00024f e014      	LDI  R17,LOW(4)
                 _0x200003D:
000250 ff02      	SBRS R16,2
000251 c011      	RJMP _0x2000042
000252 d113      	RCALL SUBOPT_0x9
000253 d11e      	RCALL SUBOPT_0xC
000254 85ab      	LDD  R26,Y+11
000255 23aa      	TST  R26
000256 f432      	BRPL _0x2000043
000257 85ea      	LDD  R30,Y+10
000258 85fb      	LDD  R31,Y+10+1
000259 d12d      	RCALL __ANEGW1
00025a 87ea      	STD  Y+10,R30
00025b 87fb      	STD  Y+10+1,R31
00025c e24d      	LDI  R20,LOW(45)
                 _0x2000043:
00025d 3040      	CPI  R20,0
00025e f011      	BREQ _0x2000044
00025f 5f1f      	SUBI R17,-LOW(1)
000260 c001      	RJMP _0x2000045
                 _0x2000044:
000261 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
000262 c002      	RJMP _0x2000046
                 _0x2000042:
000263 d102      	RCALL SUBOPT_0x9
000264 d10d      	RCALL SUBOPT_0xC
                 _0x2000046:
                 _0x2000036:
000265 fd00      	SBRC R16,0
000266 c010      	RJMP _0x2000047
                 _0x2000048:
000267 1715      	CP   R17,R21
000268 f470      	BRSH _0x200004A
000269 ff07      	SBRS R16,7
00026a c008      	RJMP _0x200004B
00026b ff02      	SBRS R16,2
00026c c004      	RJMP _0x200004C
00026d 7f0b      	ANDI R16,LOW(251)
00026e 2f24      	MOV  R18,R20
00026f 5011      	SUBI R17,LOW(1)
000270 c001      	RJMP _0x200004D
                 _0x200004C:
000271 e320      	LDI  R18,LOW(48)
                 _0x200004D:
000272 c001      	RJMP _0x200004E
                 _0x200004B:
000273 e220      	LDI  R18,LOW(32)
                 _0x200004E:
000274 d0dd      	RCALL SUBOPT_0x5
000275 5051      	SUBI R21,LOW(1)
000276 cff0      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
000277 2f31      	MOV  R19,R17
000278 ff01      	SBRS R16,1
000279 c014      	RJMP _0x200004F
                 _0x2000050:
00027a 3030      	CPI  R19,0
00027b f089      	BREQ _0x2000052
00027c ff03      	SBRS R16,3
00027d c005      	RJMP _0x2000053
00027e 81ee      	LDD  R30,Y+6
00027f 81ff      	LDD  R31,Y+6+1
000280 9125      	LPM  R18,Z+
000281 d0ed      	RCALL SUBOPT_0xB
000282 c004      	RJMP _0x2000054
                 _0x2000053:
000283 d0cb      	RCALL SUBOPT_0x4
000284 912d      	LD   R18,X+
000285 83ae      	STD  Y+6,R26
000286 83bf      	STD  Y+6+1,R27
                 _0x2000054:
000287 d0ca      	RCALL SUBOPT_0x5
000288 3050      	CPI  R21,0
000289 f009      	BREQ _0x2000055
00028a 5051      	SUBI R21,LOW(1)
                 _0x2000055:
00028b 5031      	SUBI R19,LOW(1)
00028c cfed      	RJMP _0x2000050
                 _0x2000052:
00028d c047      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
00028e e320      	LDI  R18,LOW(48)
00028f 81ee      	LDD  R30,Y+6
000290 81ff      	LDD  R31,Y+6+1
000291 d0fd      	RCALL __GETW1PF
000292 87e8      	STD  Y+8,R30
000293 87f9      	STD  Y+8+1,R31
000294 81ee      	LDD  R30,Y+6
000295 81ff      	LDD  R31,Y+6+1
000296 9632      	ADIW R30,2
000297 d0d7      	RCALL SUBOPT_0xB
                 _0x200005A:
000298 85e8      	LDD  R30,Y+8
000299 85f9      	LDD  R31,Y+8+1
00029a 85aa      	LDD  R26,Y+10
00029b 85bb      	LDD  R27,Y+10+1
00029c 17ae      	CP   R26,R30
00029d 07bf      	CPC  R27,R31
00029e f050      	BRLO _0x200005C
00029f 5f2f      	SUBI R18,-LOW(1)
0002a0 85a8      	LDD  R26,Y+8
0002a1 85b9      	LDD  R27,Y+8+1
0002a2 85ea      	LDD  R30,Y+10
0002a3 85fb      	LDD  R31,Y+10+1
0002a4 1bea      	SUB  R30,R26
0002a5 0bfb      	SBC  R31,R27
0002a6 87ea      	STD  Y+10,R30
0002a7 87fb      	STD  Y+10+1,R31
0002a8 cfef      	RJMP _0x200005A
                 _0x200005C:
0002a9 332a      	CPI  R18,58
0002aa f028      	BRLO _0x200005D
0002ab ff03      	SBRS R16,3
0002ac c002      	RJMP _0x200005E
0002ad 5f29      	SUBI R18,-LOW(7)
0002ae c001      	RJMP _0x200005F
                 _0x200005E:
0002af 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
0002b0 fd04      	SBRC R16,4
0002b1 c019      	RJMP _0x2000061
0002b2 3321      	CPI  R18,49
0002b3 f420      	BRSH _0x2000063
0002b4 85a8      	LDD  R26,Y+8
0002b5 85b9      	LDD  R27,Y+8+1
0002b6 9711      	SBIW R26,1
0002b7 f409      	BRNE _0x2000062
                 _0x2000063:
0002b8 c009      	RJMP _0x20000CD
                 _0x2000062:
0002b9 1753      	CP   R21,R19
0002ba f010      	BRLO _0x2000067
0002bb ff00      	SBRS R16,0
0002bc c001      	RJMP _0x2000068
                 _0x2000067:
0002bd c011      	RJMP _0x2000066
                 _0x2000068:
0002be e220      	LDI  R18,LOW(32)
0002bf ff07      	SBRS R16,7
0002c0 c00a      	RJMP _0x2000069
0002c1 e320      	LDI  R18,LOW(48)
                 _0x20000CD:
0002c2 6100      	ORI  R16,LOW(16)
0002c3 ff02      	SBRS R16,2
0002c4 c006      	RJMP _0x200006A
0002c5 7f0b      	ANDI R16,LOW(251)
0002c6 934a      	ST   -Y,R20
0002c7 d098      	RCALL SUBOPT_0x8
0002c8 3050      	CPI  R21,0
0002c9 f009      	BREQ _0x200006B
0002ca 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
0002cb d086      	RCALL SUBOPT_0x5
0002cc 3050      	CPI  R21,0
0002cd f009      	BREQ _0x200006C
0002ce 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
0002cf 5031      	SUBI R19,LOW(1)
0002d0 85a8      	LDD  R26,Y+8
0002d1 85b9      	LDD  R27,Y+8+1
0002d2 9712      	SBIW R26,2
0002d3 f008      	BRLO _0x2000059
0002d4 cfb9      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
0002d5 ff00      	SBRS R16,0
0002d6 c007      	RJMP _0x200006D
                 _0x200006E:
0002d7 3050      	CPI  R21,0
0002d8 f029      	BREQ _0x2000070
0002d9 5051      	SUBI R21,LOW(1)
0002da e2e0      	LDI  R30,LOW(32)
0002db 93ea      	ST   -Y,R30
0002dc d083      	RCALL SUBOPT_0x8
0002dd cff9      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000CC:
0002de e010      	LDI  R17,LOW(0)
                 _0x200001B:
0002df cefa      	RJMP _0x2000016
                 _0x2000018:
0002e0 85ac      	LDD  R26,Y+12
0002e1 85bd      	LDD  R27,Y+12+1
0002e2 d0a8      	RCALL __GETW1P
0002e3 d0b6      	RCALL __LOADLOCR6
0002e4 9664      	ADIW R28,20
0002e5 9508      	RET
                 ; .FEND
                 _printf:
                 ; .FSTART _printf
0002e6 92ff      	PUSH R15
0002e7 2ef8      	MOV  R15,R24
0002e8 9726      	SBIW R28,6
0002e9 d0ad      	RCALL __SAVELOCR2
0002ea 01de      	MOVW R26,R28
0002eb 9614      	ADIW R26,4
0002ec d096      	RCALL __ADDW2R15
0002ed 018d      	MOVW R16,R26
0002ee e0e0      	LDI  R30,LOW(0)
0002ef 83ec      	STD  Y+4,R30
0002f0 83ed      	STD  Y+4+1,R30
0002f1 83ee      	STD  Y+6,R30
0002f2 83ef      	STD  Y+6+1,R30
0002f3 01de      	MOVW R26,R28
0002f4 9618      	ADIW R26,8
0002f5 d08d      	RCALL __ADDW2R15
0002f6 d094      	RCALL __GETW1P
0002f7 d04b      	RCALL SUBOPT_0x0
0002f8 931a      	ST   -Y,R17
0002f9 930a      	ST   -Y,R16
0002fa ece4      	LDI  R30,LOW(_put_usart_G100)
0002fb e0f1      	LDI  R31,HIGH(_put_usart_G100)
0002fc d046      	RCALL SUBOPT_0x0
0002fd 01de      	MOVW R26,R28
0002fe 9618      	ADIW R26,8
0002ff ded0      	RCALL __print_G100
000300 d09d      	RCALL __LOADLOCR2
000301 9628      	ADIW R28,8
000302 90ff      	POP  R15
000303 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _strcmp:
                 ; .FSTART _strcmp
000304 d047      	RCALL SUBOPT_0x3
000305 91e9          ld   r30,y+
000306 91f9          ld   r31,y+
000307 91a9          ld   r26,y+
000308 91b9          ld   r27,y+
                 strcmp0:
000309 916d          ld   r22,x+
00030a 9171          ld   r23,z+
00030b 1767          cp   r22,r23
00030c f421          brne strcmp1
00030d 2366          tst  r22
00030e f7d1          brne strcmp0
                 strcmp3:
00030f 27ee          clr  r30
000310 9508          ret
                 strcmp1:
000311 1b67          sub  r22,r23
000312 f3e1          breq strcmp3
000313 e0e1          ldi  r30,1
000314 f408          brcc strcmp2
000315 50e2          subi r30,2
                 strcmp2:
000316 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
000317 d034      	RCALL SUBOPT_0x3
000318 91a9          ld   r26,y+
000319 91b9          ld   r27,y+
00031a 27ee          clr  r30
00031b 27ff          clr  r31
                 strlen0:
00031c 916d          ld   r22,x+
00031d 2366          tst  r22
00031e f011          breq strlen1
00031f 9631          adiw r30,1
000320 cffb          rjmp strlen0
                 strlen1:
000321 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000322 d029      	RCALL SUBOPT_0x3
000323 27aa          clr  r26
000324 27bb          clr  r27
000325 91e9          ld   r30,y+
000326 91f9          ld   r31,y+
                 strlenf0:
000327 9005      	lpm  r0,z+
000328 2000          tst  r0
000329 f011          breq strlenf1
00032a 9611          adiw r26,1
00032b cffb          rjmp strlenf0
                 strlenf1:
00032c 01fd          movw r30,r26
00032d 9508          ret
                 ; .FEND
                 _strncpy:
                 ; .FSTART _strncpy
00032e 93aa      	ST   -Y,R26
00032f 9179          ld   r23,y+
000330 91e9          ld   r30,y+
000331 91f9          ld   r31,y+
000332 91a9          ld   r26,y+
000333 91b9          ld   r27,y+
000334 01cd          movw r24,r26
                 strncpy0:
000335 2377          tst  r23
000336 f051          breq strncpy1
000337 957a          dec  r23
000338 9161          ld   r22,z+
000339 936d          st   x+,r22
00033a 2366          tst  r22
00033b f7c9          brne strncpy0
                 strncpy2:
00033c 2377          tst  r23
00033d f019          breq strncpy1
00033e 957a          dec  r23
00033f 936d          st   x+,r22
000340 cffb          rjmp strncpy2
                 strncpy1:
000341 01fc          movw r30,r24
000342 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x0:
000343 93fa      	ST   -Y,R31
000344 93ea      	ST   -Y,R30
000345 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x1:
000346 01fe      	MOVW R30,R28
000347 9674      	ADIW R30,20
000348 cffa      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2:
000349 dfba      	RCALL _strcmp
00034a 30e0      	CPI  R30,0
00034b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
00034c 93ba      	ST   -Y,R27
00034d 93aa      	ST   -Y,R26
00034e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
00034f 81ae      	LDD  R26,Y+6
000350 81bf      	LDD  R27,Y+6+1
000351 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x5:
000352 932a      	ST   -Y,R18
000353 85ad      	LDD  R26,Y+13
000354 85be      	LDD  R27,Y+13+1
000355 85ef      	LDD  R30,Y+15
000356 89f8      	LDD  R31,Y+15+1
000357 9509      	ICALL
000358 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
000359 89e8      	LDD  R30,Y+16
00035a 89f9      	LDD  R31,Y+16+1
00035b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x7:
00035c 9734      	SBIW R30,4
00035d 8be8      	STD  Y+16,R30
00035e 8bf9      	STD  Y+16+1,R31
00035f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x8:
000360 85ad      	LDD  R26,Y+13
000361 85be      	LDD  R27,Y+13+1
000362 85ef      	LDD  R30,Y+15
000363 89f8      	LDD  R31,Y+15+1
000364 9509      	ICALL
000365 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
000366 dff2      	RCALL SUBOPT_0x6
000367 cff4      	RJMP SUBOPT_0x7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xA:
000368 89a8      	LDD  R26,Y+16
000369 89b9      	LDD  R27,Y+16+1
00036a 9614      	ADIW R26,4
00036b d01f      	RCALL __GETW1P
00036c 83ee      	STD  Y+6,R30
00036d 83ff      	STD  Y+6+1,R31
00036e cfe0      	RJMP SUBOPT_0x4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
00036f 83ee      	STD  Y+6,R30
000370 83ff      	STD  Y+6+1,R31
000371 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC:
000372 89a8      	LDD  R26,Y+16
000373 89b9      	LDD  R27,Y+16+1
000374 9614      	ADIW R26,4
000375 d015      	RCALL __GETW1P
000376 87ea      	STD  Y+10,R30
000377 87fb      	STD  Y+10+1,R31
000378 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000379 9610      	adiw r26,0
00037a f039      	breq __delay_ms1
                 __delay_ms0:
                +
00037b ed80     +LDI R24 , LOW ( 0x7D0 )
00037c e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00037d 9701     +SBIW R24 , 1
00037e f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00037f 95a8      	wdr
000380 9711      	sbiw r26,1
000381 f7c9      	brne __delay_ms0
                 __delay_ms1:
000382 9508      	ret
                 
                 __ADDW2R15:
000383 2400      	CLR  R0
000384 0daf      	ADD  R26,R15
000385 1db0      	ADC  R27,R0
000386 9508      	RET
                 
                 __ANEGW1:
000387 95f1      	NEG  R31
000388 95e1      	NEG  R30
000389 40f0      	SBCI R31,0
00038a 9508      	RET
                 
                 __GETW1P:
00038b 91ed      	LD   R30,X+
00038c 91fc      	LD   R31,X
00038d 9711      	SBIW R26,1
00038e 9508      	RET
                 
                 __GETW1PF:
00038f 9005      	LPM  R0,Z+
000390 91f4      	LPM  R31,Z
000391 2de0      	MOV  R30,R0
000392 9508      	RET
                 
                 __SAVELOCR6:
000393 935a      	ST   -Y,R21
                 __SAVELOCR5:
000394 934a      	ST   -Y,R20
                 __SAVELOCR4:
000395 933a      	ST   -Y,R19
                 __SAVELOCR3:
000396 932a      	ST   -Y,R18
                 __SAVELOCR2:
000397 931a      	ST   -Y,R17
000398 930a      	ST   -Y,R16
000399 9508      	RET
                 
                 __LOADLOCR6:
00039a 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00039b 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00039c 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00039d 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00039e 8119      	LDD  R17,Y+1
00039f 8108      	LD   R16,Y
0003a0 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8A register use summary:
r0 :  13 r1 :   1 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  33 r17:  22 r18:  32 r19:  12 r20:   9 r21:  21 r22:  12 r23:   8 
r24:  14 r25:   3 r26:  65 r27:  36 r28:  17 r29:   1 r30: 135 r31:  51 
x  :  18 y  : 115 z  :  15 
Registers used: 22 out of 35 (62.9%)

ATmega8A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   2 
adiw  :  20 and   :   0 andi  :   4 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  18 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   6 
brlt  :   0 brmi  :   0 brne  :  35 brpl  :   1 brsh  :   3 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 cbi   :  13 
cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 clr   :   8 
cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 cp    :   5 
cpc   :   2 cpi   :  32 cpse  :   0 dec   :   3 des   :   0 eor   :   0 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 in    :   1 
inc   :   0 ld    :  25 ldd   :  57 ldi   : 102 lds   :   0 lpm   :  14 
lsl   :   0 lsr   :   0 mov   :  14 movw  :  14 mul   :   1 muls  :   0 
mulsu :   0 neg   :   2 nop   :   0 or    :   1 ori   :   6 out   :  16 
pop   :   3 push  :   3 rcall :  81 ret   :  28 reti  :   0 rjmp  :  89 
rol   :   0 ror   :   0 sbc   :   1 sbci  :   5 sbi   :  13 sbic  :   0 
sbis  :   2 sbiw  :  13 sbr   :   0 sbrc  :   2 sbrs  :  10 sec   :   0 
seh   :   0 sei   :   0 sen   :   0 ser   :   0 ses   :   0 set   :   0 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    :  31 std   :  23 
sts   :   0 sub   :   2 subi  :  18 swap  :   0 tst   :   7 wdr   :   1 

Instructions used: 48 out of 114 (42.1%)

ATmega8A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000742   1480    378   1858    8192  22.7%
[.dseg] 0x000060 0x0001d5      0    117    117    1024  11.4%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 1 warnings
